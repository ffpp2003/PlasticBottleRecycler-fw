                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module delay
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __delay_us
                                     12 	.globl __delay_ms
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../delay.c: 3: void _delay_us(uint16_t microseconds) {
                                     51 ;	-----------------------------------------
                                     52 ;	 function _delay_us
                                     53 ;	-----------------------------------------
      000000                         54 __delay_us:
                                     55 ;	../delay.c: 4: TIM4->PSCR = TIM4_PRESCALER_1; // Set prescaler
      000000 35 00 53 45      [ 1]   56 	mov	0x5345+0, #0x00
                                     57 ;	../delay.c: 8: TIM4->ARR = ((16000000L)/1000000) - 1;
      000004 35 0F 53 46      [ 1]   58 	mov	0x5346+0, #0x0f
                                     59 ;	../delay.c: 11: TIM4->CR1 = TIM4_CR1_CEN; // Enable counter
      000008 35 01 53 40      [ 1]   60 	mov	0x5340+0, #0x01
      00000C                         61 00106$:
                                     62 ;	../delay.c: 13: for (; microseconds > 1; --microseconds) {
      00000C 90 93            [ 1]   63 	ldw	y, x
      00000E 90 A3 00 01      [ 2]   64 	cpw	y, #0x0001
      000012 22 01            [ 1]   65 	jrugt	00132$
      000014 81               [ 4]   66 	ret
      000015                         67 00132$:
                                     68 ;	../delay.c: 14: while ((TIM4->SR1 & TIM4_SR1_UIF) == 0);
      000015                         69 00101$:
      000015 72 01 53 42 FB   [ 2]   70 	btjf	0x5342, #0, 00101$
                                     71 ;	../delay.c: 17: TIM4->SR1 &= ~TIM4_SR1_UIF;
      00001A 72 11 53 42      [ 1]   72 	bres	0x5342, #0
                                     73 ;	../delay.c: 13: for (; microseconds > 1; --microseconds) {
      00001E 5A               [ 2]   74 	decw	x
      00001F 20 EB            [ 2]   75 	jra	00106$
                                     76 ;	../delay.c: 19: }
      000021 81               [ 4]   77 	ret
                                     78 ;	../delay.c: 21: void _delay_ms(uint16_t milliseconds) {
                                     79 ;	-----------------------------------------
                                     80 ;	 function _delay_ms
                                     81 ;	-----------------------------------------
      000022                         82 __delay_ms:
                                     83 ;	../delay.c: 22: while (milliseconds) {
      000022                         84 00101$:
      000022 5D               [ 2]   85 	tnzw	x
      000023 26 01            [ 1]   86 	jrne	00121$
      000025 81               [ 4]   87 	ret
      000026                         88 00121$:
                                     89 ;	../delay.c: 23: _delay_us(1000);
      000026 89               [ 2]   90 	pushw	x
      000027 AE 03 E8         [ 2]   91 	ldw	x, #0x03e8
      00002A CDr00r00         [ 4]   92 	call	__delay_us
      00002D 85               [ 2]   93 	popw	x
                                     94 ;	../delay.c: 24: milliseconds--;
      00002E 5A               [ 2]   95 	decw	x
      00002F 20 F1            [ 2]   96 	jra	00101$
                                     97 ;	../delay.c: 26: }
      000031 81               [ 4]   98 	ret
                                     99 	.area CODE
                                    100 	.area CONST
                                    101 	.area INITIALIZER
                                    102 	.area CABS (ABS)
