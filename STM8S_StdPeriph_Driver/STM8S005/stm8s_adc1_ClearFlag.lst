                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_adc1_ClearFlag
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _ADC1_ClearFlag
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 47: void ADC1_ClearFlag(ADC1_Flag_TypeDef Flag)
                                     51 ;	-----------------------------------------
                                     52 ;	 function ADC1_ClearFlag
                                     53 ;	-----------------------------------------
      000000                         54 _ADC1_ClearFlag:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 52: assert_param(IS_ADC1_FLAG_OK(Flag));
      000001 A1 80            [ 1]   57 	cp	a, #0x80
      000003 27 3E            [ 1]   58 	jreq	00113$
      000005 A1 41            [ 1]   59 	cp	a, #0x41
      000007 27 3A            [ 1]   60 	jreq	00113$
      000009 A1 40            [ 1]   61 	cp	a, #0x40
      00000B 27 36            [ 1]   62 	jreq	00113$
      00000D A1 10            [ 1]   63 	cp	a, #0x10
      00000F 27 32            [ 1]   64 	jreq	00113$
      000011 A1 11            [ 1]   65 	cp	a, #0x11
      000013 27 2E            [ 1]   66 	jreq	00113$
      000015 A1 12            [ 1]   67 	cp	a, #0x12
      000017 27 2A            [ 1]   68 	jreq	00113$
      000019 A1 13            [ 1]   69 	cp	a, #0x13
      00001B 27 26            [ 1]   70 	jreq	00113$
      00001D A1 14            [ 1]   71 	cp	a, #0x14
      00001F 27 22            [ 1]   72 	jreq	00113$
      000021 A1 15            [ 1]   73 	cp	a, #0x15
      000023 27 1E            [ 1]   74 	jreq	00113$
      000025 A1 16            [ 1]   75 	cp	a, #0x16
      000027 27 1A            [ 1]   76 	jreq	00113$
      000029 A1 17            [ 1]   77 	cp	a, #0x17
      00002B 27 16            [ 1]   78 	jreq	00113$
      00002D A1 18            [ 1]   79 	cp	a, #0x18
      00002F 27 12            [ 1]   80 	jreq	00113$
      000031 A1 19            [ 1]   81 	cp	a, #0x19
      000033 27 0E            [ 1]   82 	jreq	00113$
      000035 88               [ 1]   83 	push	a
      000036 4B 34            [ 1]   84 	push	#0x34
      000038 5F               [ 1]   85 	clrw	x
      000039 89               [ 2]   86 	pushw	x
      00003A 4B 00            [ 1]   87 	push	#0x00
      00003C AEr00r00         [ 2]   88 	ldw	x, #(___str_0+0)
      00003F CDr00r00         [ 4]   89 	call	_assert_failed
      000042 84               [ 1]   90 	pop	a
      000043                         91 00113$:
                                     92 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 54: if ((Flag & 0x0F) == 0x01)
      000043 6B 01            [ 1]   93 	ld	(0x01, sp), a
      000045 88               [ 1]   94 	push	a
      000046 7B 02            [ 1]   95 	ld	a, (0x02, sp)
      000048 A4 0F            [ 1]   96 	and	a, #0x0f
      00004A 4A               [ 1]   97 	dec	a
      00004B 84               [ 1]   98 	pop	a
      00004C 26 06            [ 1]   99 	jrne	00108$
                                    100 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 57: ADC1->CR3 &= (uint8_t)(~ADC1_CR3_OVR);
      00004E 72 1D 54 03      [ 1]  101 	bres	0x5403, #6
      000052 20 56            [ 2]  102 	jra	00110$
      000054                        103 00108$:
                                    104 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 59: else if ((Flag & 0xF0) == 0x10)
      000054 88               [ 1]  105 	push	a
      000055 7B 02            [ 1]  106 	ld	a, (0x02, sp)
      000057 A4 F0            [ 1]  107 	and	a, #0xf0
      000059 A1 10            [ 1]  108 	cp	a, #0x10
      00005B 84               [ 1]  109 	pop	a
      00005C 26 3E            [ 1]  110 	jrne	00105$
                                    111 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 62: temp = (uint8_t)(Flag & (uint8_t)0x0F);
      00005E A4 0F            [ 1]  112 	and	a, #0x0f
                                    113 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 63: if (temp < 8)
      000060 97               [ 1]  114 	ld	xl, a
      000061 A1 08            [ 1]  115 	cp	a, #0x08
      000063 24 1A            [ 1]  116 	jrnc	00102$
                                    117 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 65: ADC1->AWSRL &= (uint8_t)~(uint8_t)((uint8_t)1 << temp);
      000065 C6 54 0D         [ 1]  118 	ld	a, 0x540d
      000068 6B 01            [ 1]  119 	ld	(0x01, sp), a
      00006A A6 01            [ 1]  120 	ld	a, #0x01
      00006C 88               [ 1]  121 	push	a
      00006D 9F               [ 1]  122 	ld	a, xl
      00006E 4D               [ 1]  123 	tnz	a
      00006F 27 05            [ 1]  124 	jreq	00309$
      000071                        125 00308$:
      000071 08 01            [ 1]  126 	sll	(1, sp)
      000073 4A               [ 1]  127 	dec	a
      000074 26 FB            [ 1]  128 	jrne	00308$
      000076                        129 00309$:
      000076 84               [ 1]  130 	pop	a
      000077 43               [ 1]  131 	cpl	a
      000078 14 01            [ 1]  132 	and	a, (0x01, sp)
      00007A C7 54 0D         [ 1]  133 	ld	0x540d, a
      00007D 20 2B            [ 2]  134 	jra	00110$
      00007F                        135 00102$:
                                    136 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 69: ADC1->AWSRH &= (uint8_t)~(uint8_t)((uint8_t)1 << (temp - 8));
      00007F C6 54 0C         [ 1]  137 	ld	a, 0x540c
      000082 6B 01            [ 1]  138 	ld	(0x01, sp), a
      000084 1D 00 08         [ 2]  139 	subw	x, #8
      000087 A6 01            [ 1]  140 	ld	a, #0x01
      000089 88               [ 1]  141 	push	a
      00008A 9F               [ 1]  142 	ld	a, xl
      00008B 4D               [ 1]  143 	tnz	a
      00008C 27 05            [ 1]  144 	jreq	00311$
      00008E                        145 00310$:
      00008E 08 01            [ 1]  146 	sll	(1, sp)
      000090 4A               [ 1]  147 	dec	a
      000091 26 FB            [ 1]  148 	jrne	00310$
      000093                        149 00311$:
      000093 84               [ 1]  150 	pop	a
      000094 43               [ 1]  151 	cpl	a
      000095 14 01            [ 1]  152 	and	a, (0x01, sp)
      000097 C7 54 0C         [ 1]  153 	ld	0x540c, a
      00009A 20 0E            [ 2]  154 	jra	00110$
      00009C                        155 00105$:
                                    156 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 74: ADC1->CSR &= (uint8_t) (~Flag);
      00009C AE 54 00         [ 2]  157 	ldw	x, #0x5400
      00009F 88               [ 1]  158 	push	a
      0000A0 F6               [ 1]  159 	ld	a, (x)
      0000A1 6B 02            [ 1]  160 	ld	(0x02, sp), a
      0000A3 84               [ 1]  161 	pop	a
      0000A4 43               [ 1]  162 	cpl	a
      0000A5 14 01            [ 1]  163 	and	a, (0x01, sp)
      0000A7 C7 54 00         [ 1]  164 	ld	0x5400, a
      0000AA                        165 00110$:
                                    166 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c: 76: }
      0000AA 84               [ 1]  167 	pop	a
      0000AB 81               [ 4]  168 	ret
                                    169 	.area CODE
                                    170 	.area CONST
                                    171 	.area CONST
      000000                        172 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   173 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_adc1_ClearFlag.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 61 64 63 31 5F 43
             6C 65 61 72 46 6C 61
             67 2E 63
      000034 00                     174 	.db 0x00
                                    175 	.area CODE
                                    176 	.area INITIALIZER
                                    177 	.area CABS (ABS)
