                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_adc1_ConversionConfig
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _ADC1_ConversionConfig
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 51: void ADC1_ConversionConfig(ADC1_ConvMode_TypeDef ADC1_ConversionMode, ADC1_Channel_TypeDef ADC1_Channel, ADC1_Align_TypeDef ADC1_Align)
                                     51 ;	-----------------------------------------
                                     52 ;	 function ADC1_ConversionConfig
                                     53 ;	-----------------------------------------
      000000                         54 _ADC1_ConversionConfig:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 54: assert_param(IS_ADC1_CONVERSIONMODE_OK(ADC1_ConversionMode));
      000001 6B 01            [ 1]   57 	ld	(0x01, sp), a
      000003 27 10            [ 1]   58 	jreq	00107$
      000005 0D 01            [ 1]   59 	tnz	(0x01, sp)
      000007 26 0C            [ 1]   60 	jrne	00107$
      000009 4B 36            [ 1]   61 	push	#0x36
      00000B 5F               [ 1]   62 	clrw	x
      00000C 89               [ 2]   63 	pushw	x
      00000D 4B 00            [ 1]   64 	push	#0x00
      00000F AEr00r00         [ 2]   65 	ldw	x, #(___str_0+0)
      000012 CDr00r00         [ 4]   66 	call	_assert_failed
      000015                         67 00107$:
                                     68 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 55: assert_param(IS_ADC1_CHANNEL_OK(ADC1_Channel));
      000015 0D 04            [ 1]   69 	tnz	(0x04, sp)
      000017 27 47            [ 1]   70 	jreq	00112$
      000019 7B 04            [ 1]   71 	ld	a, (0x04, sp)
      00001B 4A               [ 1]   72 	dec	a
      00001C 27 42            [ 1]   73 	jreq	00112$
      00001E 7B 04            [ 1]   74 	ld	a, (0x04, sp)
      000020 A1 02            [ 1]   75 	cp	a, #0x02
      000022 27 3C            [ 1]   76 	jreq	00112$
      000024 7B 04            [ 1]   77 	ld	a, (0x04, sp)
      000026 A1 03            [ 1]   78 	cp	a, #0x03
      000028 27 36            [ 1]   79 	jreq	00112$
      00002A 7B 04            [ 1]   80 	ld	a, (0x04, sp)
      00002C A1 04            [ 1]   81 	cp	a, #0x04
      00002E 27 30            [ 1]   82 	jreq	00112$
      000030 7B 04            [ 1]   83 	ld	a, (0x04, sp)
      000032 A1 05            [ 1]   84 	cp	a, #0x05
      000034 27 2A            [ 1]   85 	jreq	00112$
      000036 7B 04            [ 1]   86 	ld	a, (0x04, sp)
      000038 A1 06            [ 1]   87 	cp	a, #0x06
      00003A 27 24            [ 1]   88 	jreq	00112$
      00003C 7B 04            [ 1]   89 	ld	a, (0x04, sp)
      00003E A1 07            [ 1]   90 	cp	a, #0x07
      000040 27 1E            [ 1]   91 	jreq	00112$
      000042 7B 04            [ 1]   92 	ld	a, (0x04, sp)
      000044 A1 08            [ 1]   93 	cp	a, #0x08
      000046 27 18            [ 1]   94 	jreq	00112$
      000048 7B 04            [ 1]   95 	ld	a, (0x04, sp)
      00004A A1 0C            [ 1]   96 	cp	a, #0x0c
      00004C 27 12            [ 1]   97 	jreq	00112$
      00004E 7B 04            [ 1]   98 	ld	a, (0x04, sp)
      000050 A1 09            [ 1]   99 	cp	a, #0x09
      000052 27 0C            [ 1]  100 	jreq	00112$
      000054 4B 37            [ 1]  101 	push	#0x37
      000056 5F               [ 1]  102 	clrw	x
      000057 89               [ 2]  103 	pushw	x
      000058 4B 00            [ 1]  104 	push	#0x00
      00005A AEr00r00         [ 2]  105 	ldw	x, #(___str_0+0)
      00005D CDr00r00         [ 4]  106 	call	_assert_failed
      000060                        107 00112$:
                                    108 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 56: assert_param(IS_ADC1_ALIGN_OK(ADC1_Align));
      000060 0D 05            [ 1]  109 	tnz	(0x05, sp)
      000062 27 12            [ 1]  110 	jreq	00144$
      000064 7B 05            [ 1]  111 	ld	a, (0x05, sp)
      000066 A1 08            [ 1]  112 	cp	a, #0x08
      000068 27 0C            [ 1]  113 	jreq	00144$
      00006A 4B 38            [ 1]  114 	push	#0x38
      00006C 5F               [ 1]  115 	clrw	x
      00006D 89               [ 2]  116 	pushw	x
      00006E 4B 00            [ 1]  117 	push	#0x00
      000070 AEr00r00         [ 2]  118 	ldw	x, #(___str_0+0)
      000073 CDr00r00         [ 4]  119 	call	_assert_failed
      000076                        120 00144$:
                                    121 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 59: ADC1->CR2 &= (uint8_t)(~ADC1_CR2_ALIGN);
      000076 72 17 54 02      [ 1]  122 	bres	0x5402, #3
                                    123 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 61: ADC1->CR2 |= (uint8_t)(ADC1_Align);
      00007A C6 54 02         [ 1]  124 	ld	a, 0x5402
      00007D 1A 05            [ 1]  125 	or	a, (0x05, sp)
      00007F C7 54 02         [ 1]  126 	ld	0x5402, a
                                    127 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 66: ADC1->CR1 |= ADC1_CR1_CONT;
      000082 C6 54 01         [ 1]  128 	ld	a, 0x5401
                                    129 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 63: if (ADC1_ConversionMode == ADC1_CONVERSIONMODE_CONTINUOUS)
      000085 0D 01            [ 1]  130 	tnz	(0x01, sp)
      000087 27 07            [ 1]  131 	jreq	00102$
                                    132 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 66: ADC1->CR1 |= ADC1_CR1_CONT;
      000089 AA 02            [ 1]  133 	or	a, #0x02
      00008B C7 54 01         [ 1]  134 	ld	0x5401, a
      00008E 20 05            [ 2]  135 	jra	00103$
      000090                        136 00102$:
                                    137 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 71: ADC1->CR1 &= (uint8_t)(~ADC1_CR1_CONT);
      000090 A4 FD            [ 1]  138 	and	a, #0xfd
      000092 C7 54 01         [ 1]  139 	ld	0x5401, a
      000095                        140 00103$:
                                    141 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 75: ADC1->CSR &= (uint8_t)(~ADC1_CSR_CH);
      000095 C6 54 00         [ 1]  142 	ld	a, 0x5400
      000098 A4 F0            [ 1]  143 	and	a, #0xf0
      00009A C7 54 00         [ 1]  144 	ld	0x5400, a
                                    145 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 77: ADC1->CSR |= (uint8_t)(ADC1_Channel);
      00009D C6 54 00         [ 1]  146 	ld	a, 0x5400
      0000A0 1A 04            [ 1]  147 	or	a, (0x04, sp)
      0000A2 C7 54 00         [ 1]  148 	ld	0x5400, a
                                    149 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c: 78: }
      0000A5 1E 02            [ 2]  150 	ldw	x, (2, sp)
      0000A7 5B 05            [ 2]  151 	addw	sp, #5
      0000A9 FC               [ 2]  152 	jp	(x)
                                    153 	.area CODE
                                    154 	.area CONST
                                    155 	.area CONST
      000000                        156 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   157 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_adc1_ConversionConfig.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 61 64 63 31 5F 43
             6F 6E 76 65 72 73 69
             6F 6E 43 6F 6E 66 69
             67 2E 63
      00003B 00                     158 	.db 0x00
                                    159 	.area CODE
                                    160 	.area INITIALIZER
                                    161 	.area CABS (ABS)
