                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_adc1_GetFlagStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _ADC1_GetFlagStatus
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 47: FlagStatus ADC1_GetFlagStatus(ADC1_Flag_TypeDef Flag)
                                     51 ;	-----------------------------------------
                                     52 ;	 function ADC1_GetFlagStatus
                                     53 ;	-----------------------------------------
      000000                         54 _ADC1_GetFlagStatus:
      000000 89               [ 2]   55 	pushw	x
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 53: assert_param(IS_ADC1_FLAG_OK(Flag));
      000001 6B 02            [ 1]   57 	ld	(0x02, sp), a
      000003 A1 80            [ 1]   58 	cp	a, #0x80
      000005 27 54            [ 1]   59 	jreq	00113$
      000007 7B 02            [ 1]   60 	ld	a, (0x02, sp)
      000009 A1 41            [ 1]   61 	cp	a, #0x41
      00000B 27 4E            [ 1]   62 	jreq	00113$
      00000D 7B 02            [ 1]   63 	ld	a, (0x02, sp)
      00000F A1 40            [ 1]   64 	cp	a, #0x40
      000011 27 48            [ 1]   65 	jreq	00113$
      000013 7B 02            [ 1]   66 	ld	a, (0x02, sp)
      000015 A1 10            [ 1]   67 	cp	a, #0x10
      000017 27 42            [ 1]   68 	jreq	00113$
      000019 7B 02            [ 1]   69 	ld	a, (0x02, sp)
      00001B A1 11            [ 1]   70 	cp	a, #0x11
      00001D 27 3C            [ 1]   71 	jreq	00113$
      00001F 7B 02            [ 1]   72 	ld	a, (0x02, sp)
      000021 A1 12            [ 1]   73 	cp	a, #0x12
      000023 27 36            [ 1]   74 	jreq	00113$
      000025 7B 02            [ 1]   75 	ld	a, (0x02, sp)
      000027 A1 13            [ 1]   76 	cp	a, #0x13
      000029 27 30            [ 1]   77 	jreq	00113$
      00002B 7B 02            [ 1]   78 	ld	a, (0x02, sp)
      00002D A1 14            [ 1]   79 	cp	a, #0x14
      00002F 27 2A            [ 1]   80 	jreq	00113$
      000031 7B 02            [ 1]   81 	ld	a, (0x02, sp)
      000033 A1 15            [ 1]   82 	cp	a, #0x15
      000035 27 24            [ 1]   83 	jreq	00113$
      000037 7B 02            [ 1]   84 	ld	a, (0x02, sp)
      000039 A1 16            [ 1]   85 	cp	a, #0x16
      00003B 27 1E            [ 1]   86 	jreq	00113$
      00003D 7B 02            [ 1]   87 	ld	a, (0x02, sp)
      00003F A1 17            [ 1]   88 	cp	a, #0x17
      000041 27 18            [ 1]   89 	jreq	00113$
      000043 7B 02            [ 1]   90 	ld	a, (0x02, sp)
      000045 A1 18            [ 1]   91 	cp	a, #0x18
      000047 27 12            [ 1]   92 	jreq	00113$
      000049 7B 02            [ 1]   93 	ld	a, (0x02, sp)
      00004B A1 19            [ 1]   94 	cp	a, #0x19
      00004D 27 0C            [ 1]   95 	jreq	00113$
      00004F 4B 35            [ 1]   96 	push	#0x35
      000051 5F               [ 1]   97 	clrw	x
      000052 89               [ 2]   98 	pushw	x
      000053 4B 00            [ 1]   99 	push	#0x00
      000055 AEr00r00         [ 2]  100 	ldw	x, #(___str_0+0)
      000058 CDr00r00         [ 4]  101 	call	_assert_failed
      00005B                        102 00113$:
                                    103 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 55: if ((Flag & 0x0F) == 0x01)
      00005B 7B 02            [ 1]  104 	ld	a, (0x02, sp)
      00005D 97               [ 1]  105 	ld	xl, a
      00005E A4 0F            [ 1]  106 	and	a, #0x0f
      000060 4A               [ 1]  107 	dec	a
      000061 26 07            [ 1]  108 	jrne	00108$
                                    109 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 58: flagstatus = (uint8_t)(ADC1->CR3 & ADC1_CR3_OVR);
      000063 C6 54 03         [ 1]  110 	ld	a, 0x5403
      000066 A4 40            [ 1]  111 	and	a, #0x40
      000068 20 44            [ 2]  112 	jra	00109$
      00006A                        113 00108$:
                                    114 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 60: else if ((Flag & 0xF0) == 0x10)
      00006A 9F               [ 1]  115 	ld	a, xl
      00006B A4 F0            [ 1]  116 	and	a, #0xf0
      00006D A1 10            [ 1]  117 	cp	a, #0x10
      00006F 26 38            [ 1]  118 	jrne	00105$
                                    119 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 63: temp = (uint8_t)(Flag & (uint8_t)0x0F);
      000071 7B 02            [ 1]  120 	ld	a, (0x02, sp)
      000073 A4 0F            [ 1]  121 	and	a, #0x0f
                                    122 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 64: if (temp < 8)
      000075 97               [ 1]  123 	ld	xl, a
      000076 A1 08            [ 1]  124 	cp	a, #0x08
      000078 24 16            [ 1]  125 	jrnc	00102$
                                    126 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 66: flagstatus = (uint8_t)(ADC1->AWSRL & (uint8_t)((uint8_t)1 << temp));
      00007A C6 54 0D         [ 1]  127 	ld	a, 0x540d
      00007D 6B 01            [ 1]  128 	ld	(0x01, sp), a
      00007F A6 01            [ 1]  129 	ld	a, #0x01
      000081 88               [ 1]  130 	push	a
      000082 9F               [ 1]  131 	ld	a, xl
      000083 4D               [ 1]  132 	tnz	a
      000084 27 05            [ 1]  133 	jreq	00309$
      000086                        134 00308$:
      000086 08 01            [ 1]  135 	sll	(1, sp)
      000088 4A               [ 1]  136 	dec	a
      000089 26 FB            [ 1]  137 	jrne	00308$
      00008B                        138 00309$:
      00008B 84               [ 1]  139 	pop	a
      00008C 14 01            [ 1]  140 	and	a, (0x01, sp)
      00008E 20 1E            [ 2]  141 	jra	00109$
      000090                        142 00102$:
                                    143 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 70: flagstatus = (uint8_t)(ADC1->AWSRH & (uint8_t)((uint8_t)1 << (temp - 8)));
      000090 C6 54 0C         [ 1]  144 	ld	a, 0x540c
      000093 6B 01            [ 1]  145 	ld	(0x01, sp), a
      000095 1D 00 08         [ 2]  146 	subw	x, #8
      000098 A6 01            [ 1]  147 	ld	a, #0x01
      00009A 88               [ 1]  148 	push	a
      00009B 9F               [ 1]  149 	ld	a, xl
      00009C 4D               [ 1]  150 	tnz	a
      00009D 27 05            [ 1]  151 	jreq	00311$
      00009F                        152 00310$:
      00009F 08 01            [ 1]  153 	sll	(1, sp)
      0000A1 4A               [ 1]  154 	dec	a
      0000A2 26 FB            [ 1]  155 	jrne	00310$
      0000A4                        156 00311$:
      0000A4 84               [ 1]  157 	pop	a
      0000A5 14 01            [ 1]  158 	and	a, (0x01, sp)
      0000A7 20 05            [ 2]  159 	jra	00109$
      0000A9                        160 00105$:
                                    161 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 75: flagstatus = (uint8_t)(ADC1->CSR & Flag);
      0000A9 C6 54 00         [ 1]  162 	ld	a, 0x5400
      0000AC 14 02            [ 1]  163 	and	a, (0x02, sp)
      0000AE                        164 00109$:
                                    165 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 77: return ((FlagStatus)flagstatus);
      0000AE 40               [ 1]  166 	neg	a
      0000AF 4F               [ 1]  167 	clr	a
      0000B0 49               [ 1]  168 	rlc	a
                                    169 ;	../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c: 79: }
      0000B1 85               [ 2]  170 	popw	x
      0000B2 81               [ 4]  171 	ret
                                    172 	.area CODE
                                    173 	.area CONST
                                    174 	.area CONST
      000000                        175 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   176 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_adc1_GetFlagStatus.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 61 64 63 31 5F 47
             65 74 46 6C 61 67 53
             74 61 74 75 73 2E 63
      000038 00                     177 	.db 0x00
                                    178 	.area CODE
                                    179 	.area INITIALIZER
                                    180 	.area CABS (ABS)
