                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_awu_Init
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _AWU_Init
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 50: void AWU_Init(AWU_Timebase_TypeDef AWU_TimeBase)
                                     51 ;	-----------------------------------------
                                     52 ;	 function AWU_Init
                                     53 ;	-----------------------------------------
      000000                         54 _AWU_Init:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 53: assert_param(IS_AWU_TIMEBASE_OK(AWU_TimeBase));
      000001 97               [ 1]   57 	ld	xl, a
      000002 4D               [ 1]   58 	tnz	a
      000003 27 63            [ 1]   59 	jreq	00104$
      000005 9F               [ 1]   60 	ld	a, xl
      000006 4A               [ 1]   61 	dec	a
      000007 27 5F            [ 1]   62 	jreq	00104$
      000009 9F               [ 1]   63 	ld	a, xl
      00000A A1 02            [ 1]   64 	cp	a, #0x02
      00000C 27 5A            [ 1]   65 	jreq	00104$
      00000E 9F               [ 1]   66 	ld	a, xl
      00000F A1 03            [ 1]   67 	cp	a, #0x03
      000011 27 55            [ 1]   68 	jreq	00104$
      000013 9F               [ 1]   69 	ld	a, xl
      000014 A1 04            [ 1]   70 	cp	a, #0x04
      000016 27 50            [ 1]   71 	jreq	00104$
      000018 9F               [ 1]   72 	ld	a, xl
      000019 A1 05            [ 1]   73 	cp	a, #0x05
      00001B 27 4B            [ 1]   74 	jreq	00104$
      00001D 9F               [ 1]   75 	ld	a, xl
      00001E A1 06            [ 1]   76 	cp	a, #0x06
      000020 27 46            [ 1]   77 	jreq	00104$
      000022 9F               [ 1]   78 	ld	a, xl
      000023 A1 07            [ 1]   79 	cp	a, #0x07
      000025 27 41            [ 1]   80 	jreq	00104$
      000027 9F               [ 1]   81 	ld	a, xl
      000028 A1 08            [ 1]   82 	cp	a, #0x08
      00002A 27 3C            [ 1]   83 	jreq	00104$
      00002C 9F               [ 1]   84 	ld	a, xl
      00002D A1 09            [ 1]   85 	cp	a, #0x09
      00002F 27 37            [ 1]   86 	jreq	00104$
      000031 9F               [ 1]   87 	ld	a, xl
      000032 A1 0A            [ 1]   88 	cp	a, #0x0a
      000034 27 32            [ 1]   89 	jreq	00104$
      000036 9F               [ 1]   90 	ld	a, xl
      000037 A1 0B            [ 1]   91 	cp	a, #0x0b
      000039 27 2D            [ 1]   92 	jreq	00104$
      00003B 9F               [ 1]   93 	ld	a, xl
      00003C A1 0C            [ 1]   94 	cp	a, #0x0c
      00003E 27 28            [ 1]   95 	jreq	00104$
      000040 9F               [ 1]   96 	ld	a, xl
      000041 A1 0D            [ 1]   97 	cp	a, #0x0d
      000043 27 23            [ 1]   98 	jreq	00104$
      000045 9F               [ 1]   99 	ld	a, xl
      000046 A1 0E            [ 1]  100 	cp	a, #0x0e
      000048 27 1E            [ 1]  101 	jreq	00104$
      00004A 9F               [ 1]  102 	ld	a, xl
      00004B A1 0F            [ 1]  103 	cp	a, #0x0f
      00004D 27 19            [ 1]  104 	jreq	00104$
      00004F 9F               [ 1]  105 	ld	a, xl
      000050 A1 10            [ 1]  106 	cp	a, #0x10
      000052 27 14            [ 1]  107 	jreq	00104$
      000054 89               [ 2]  108 	pushw	x
      000055 4B 35            [ 1]  109 	push	#0x35
      000057 4B 00            [ 1]  110 	push	#0x00
      000059 4B 00            [ 1]  111 	push	#0x00
      00005B 4B 00            [ 1]  112 	push	#0x00
      00005D AEr00r00         [ 2]  113 	ldw	x, #(___str_0+0)
      000060 CDr00r00         [ 4]  114 	call	_assert_failed
      000063 5B 01            [ 2]  115 	addw	sp, #1
      000065 41               [ 1]  116 	exg	a, xl
      000066 84               [ 1]  117 	pop	a
      000067 41               [ 1]  118 	exg	a, xl
      000068                        119 00104$:
                                    120 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 56: AWU->CSR |= AWU_CSR_AWUEN;
      000068 72 18 50 F0      [ 1]  121 	bset	0x50f0, #4
                                    122 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 59: AWU->TBR &= (uint8_t)(~AWU_TBR_AWUTB);
      00006C C6 50 F2         [ 1]  123 	ld	a, 0x50f2
      00006F A4 F0            [ 1]  124 	and	a, #0xf0
      000071 C7 50 F2         [ 1]  125 	ld	0x50f2, a
                                    126 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 60: AWU->TBR |= TBR_Array[(uint8_t)AWU_TimeBase];
      000074 C6 50 F2         [ 1]  127 	ld	a, 0x50f2
      000077 6B 01            [ 1]  128 	ld	(0x01, sp), a
      000079 90 5F            [ 1]  129 	clrw	y
      00007B 61               [ 1]  130 	exg	a, yl
      00007C 9F               [ 1]  131 	ld	a, xl
      00007D 61               [ 1]  132 	exg	a, yl
      00007E 90 D6u00u00      [ 1]  133 	ld	a, (_TBR_Array+0, y)
      000082 1A 01            [ 1]  134 	or	a, (0x01, sp)
      000084 C7 50 F2         [ 1]  135 	ld	0x50f2, a
                                    136 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 63: AWU->APR &= (uint8_t)(~AWU_APR_APR);
      000087 C6 50 F1         [ 1]  137 	ld	a, 0x50f1
      00008A A4 C0            [ 1]  138 	and	a, #0xc0
      00008C C7 50 F1         [ 1]  139 	ld	0x50f1, a
                                    140 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 64: AWU->APR |= APR_Array[(uint8_t)AWU_TimeBase];
      00008F C6 50 F1         [ 1]  141 	ld	a, 0x50f1
      000092 6B 01            [ 1]  142 	ld	(0x01, sp), a
      000094 4F               [ 1]  143 	clr	a
      000095 95               [ 1]  144 	ld	xh, a
      000096 D6u00u00         [ 1]  145 	ld	a, (_APR_Array+0, x)
      000099 1A 01            [ 1]  146 	or	a, (0x01, sp)
      00009B C7 50 F1         [ 1]  147 	ld	0x50f1, a
                                    148 ;	../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c: 65: }
      00009E 84               [ 1]  149 	pop	a
      00009F 81               [ 4]  150 	ret
                                    151 	.area CODE
                                    152 	.area CONST
                                    153 	.area CONST
      000000                        154 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   155 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_awu_Init.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 61 77 75 5F 49 6E
             69 74 2E 63
      00002E 00                     156 	.db 0x00
                                    157 	.area CODE
                                    158 	.area INITIALIZER
                                    159 	.area CABS (ABS)
