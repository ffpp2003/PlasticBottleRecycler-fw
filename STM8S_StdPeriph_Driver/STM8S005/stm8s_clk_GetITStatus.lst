                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _CLK_GetITStatus
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 48: ITStatus CLK_GetITStatus(CLK_IT_TypeDef CLK_IT)
                                     51 ;	-----------------------------------------
                                     52 ;	 function CLK_GetITStatus
                                     53 ;	-----------------------------------------
      000000                         54 _CLK_GetITStatus:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 53: assert_param(IS_CLK_IT_OK(CLK_IT));
      000001 6B 01            [ 1]   57 	ld	(0x01, sp), a
      000003 A0 1C            [ 1]   58 	sub	a, #0x1c
      000005 26 02            [ 1]   59 	jrne	00153$
      000007 4C               [ 1]   60 	inc	a
      000008 21                      61 	.byte 0x21
      000009                         62 00153$:
      000009 4F               [ 1]   63 	clr	a
      00000A                         64 00154$:
      00000A 88               [ 1]   65 	push	a
      00000B 7B 02            [ 1]   66 	ld	a, (0x02, sp)
      00000D A1 0C            [ 1]   67 	cp	a, #0x0c
      00000F 84               [ 1]   68 	pop	a
      000010 27 11            [ 1]   69 	jreq	00113$
      000012 4D               [ 1]   70 	tnz	a
      000013 26 0E            [ 1]   71 	jrne	00113$
      000015 88               [ 1]   72 	push	a
      000016 4B 35            [ 1]   73 	push	#0x35
      000018 5F               [ 1]   74 	clrw	x
      000019 89               [ 2]   75 	pushw	x
      00001A 4B 00            [ 1]   76 	push	#0x00
      00001C AEr00r00         [ 2]   77 	ldw	x, #(___str_0+0)
      00001F CDr00r00         [ 4]   78 	call	_assert_failed
      000022 84               [ 1]   79 	pop	a
      000023                         80 00113$:
                                     81 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 55: if (CLK_IT == CLK_IT_SWIF)
      000023 4D               [ 1]   82 	tnz	a
      000024 27 0F            [ 1]   83 	jreq	00108$
                                     84 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 58: if ((CLK->SWCR & (uint8_t)CLK_IT) == (uint8_t)0x0C)
      000026 C6 50 C5         [ 1]   85 	ld	a, 0x50c5
      000029 14 01            [ 1]   86 	and	a, (0x01, sp)
                                     87 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 60: bitstatus = SET;
      00002B A0 0C            [ 1]   88 	sub	a, #0x0c
      00002D 26 03            [ 1]   89 	jrne	00102$
      00002F 4C               [ 1]   90 	inc	a
      000030 20 0F            [ 2]   91 	jra	00109$
      000032                         92 00102$:
                                     93 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 64: bitstatus = RESET;
      000032 4F               [ 1]   94 	clr	a
      000033 20 0C            [ 2]   95 	jra	00109$
      000035                         96 00108$:
                                     97 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 70: if ((CLK->CSSR & (uint8_t)CLK_IT) == (uint8_t)0x0C)
      000035 C6 50 C8         [ 1]   98 	ld	a, 0x50c8
      000038 14 01            [ 1]   99 	and	a, (0x01, sp)
                                    100 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 72: bitstatus = SET;
      00003A A0 0C            [ 1]  101 	sub	a, #0x0c
      00003C 26 02            [ 1]  102 	jrne	00105$
      00003E 4C               [ 1]  103 	inc	a
                                    104 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 76: bitstatus = RESET;
      00003F 21                     105 	.byte 0x21
      000040                        106 00105$:
      000040 4F               [ 1]  107 	clr	a
      000041                        108 00109$:
                                    109 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 81: return bitstatus;
                                    110 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c: 82: }
      000041 5B 01            [ 2]  111 	addw	sp, #1
      000043 81               [ 4]  112 	ret
                                    113 	.area CODE
                                    114 	.area CONST
                                    115 	.area CONST
      000000                        116 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   117 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_clk_GetITStatus.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 63 6C 6B 5F 47 65
             74 49 54 53 74 61 74
             75 73 2E 63
      000035 00                     118 	.db 0x00
                                    119 	.area CODE
                                    120 	.area INITIALIZER
                                    121 	.area CABS (ABS)
