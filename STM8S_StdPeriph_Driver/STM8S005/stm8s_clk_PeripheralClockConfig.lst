                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk_PeripheralClockConfig
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _CLK_PeripheralClockConfig
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 50: void CLK_PeripheralClockConfig(CLK_Peripheral_TypeDef CLK_Peripheral, FunctionalState NewState)
                                     51 ;	-----------------------------------------
                                     52 ;	 function CLK_PeripheralClockConfig
                                     53 ;	-----------------------------------------
      000000                         54 _CLK_PeripheralClockConfig:
      000000 52 03            [ 2]   55 	sub	sp, #3
      000002 6B 03            [ 1]   56 	ld	(0x03, sp), a
                                     57 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 53: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000004 0D 06            [ 1]   58 	tnz	(0x06, sp)
      000006 27 10            [ 1]   59 	jreq	00113$
      000008 0D 06            [ 1]   60 	tnz	(0x06, sp)
      00000A 26 0C            [ 1]   61 	jrne	00113$
      00000C 4B 35            [ 1]   62 	push	#0x35
      00000E 5F               [ 1]   63 	clrw	x
      00000F 89               [ 2]   64 	pushw	x
      000010 4B 00            [ 1]   65 	push	#0x00
      000012 AEr00r00         [ 2]   66 	ldw	x, #(___str_0+0)
      000015 CDr00r00         [ 4]   67 	call	_assert_failed
      000018                         68 00113$:
                                     69 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 54: assert_param(IS_CLK_PERIPHERAL_OK(CLK_Peripheral));
      000018 0D 03            [ 1]   70 	tnz	(0x03, sp)
      00001A 27 64            [ 1]   71 	jreq	00118$
      00001C 7B 03            [ 1]   72 	ld	a, (0x03, sp)
      00001E 4A               [ 1]   73 	dec	a
      00001F 27 5F            [ 1]   74 	jreq	00118$
      000021 7B 03            [ 1]   75 	ld	a, (0x03, sp)
      000023 A0 03            [ 1]   76 	sub	a, #0x03
      000025 26 02            [ 1]   77 	jrne	00298$
      000027 4C               [ 1]   78 	inc	a
      000028 21                      79 	.byte 0x21
      000029                         80 00298$:
      000029 4F               [ 1]   81 	clr	a
      00002A                         82 00299$:
      00002A 4D               [ 1]   83 	tnz	a
      00002B 26 53            [ 1]   84 	jrne	00118$
      00002D 4D               [ 1]   85 	tnz	a
      00002E 26 50            [ 1]   86 	jrne	00118$
      000030 4D               [ 1]   87 	tnz	a
      000031 26 4D            [ 1]   88 	jrne	00118$
      000033 7B 03            [ 1]   89 	ld	a, (0x03, sp)
      000035 A0 04            [ 1]   90 	sub	a, #0x04
      000037 26 04            [ 1]   91 	jrne	00304$
      000039 4C               [ 1]   92 	inc	a
      00003A 97               [ 1]   93 	ld	xl, a
      00003B 20 02            [ 2]   94 	jra	00305$
      00003D                         95 00304$:
      00003D 4F               [ 1]   96 	clr	a
      00003E 97               [ 1]   97 	ld	xl, a
      00003F                         98 00305$:
      00003F 9F               [ 1]   99 	ld	a, xl
      000040 4D               [ 1]  100 	tnz	a
      000041 26 3D            [ 1]  101 	jrne	00118$
      000043 7B 03            [ 1]  102 	ld	a, (0x03, sp)
      000045 A0 05            [ 1]  103 	sub	a, #0x05
      000047 26 02            [ 1]  104 	jrne	00308$
      000049 4C               [ 1]  105 	inc	a
      00004A 21                     106 	.byte 0x21
      00004B                        107 00308$:
      00004B 4F               [ 1]  108 	clr	a
      00004C                        109 00309$:
      00004C 4D               [ 1]  110 	tnz	a
      00004D 26 31            [ 1]  111 	jrne	00118$
      00004F 4D               [ 1]  112 	tnz	a
      000050 26 2E            [ 1]  113 	jrne	00118$
      000052 9F               [ 1]  114 	ld	a, xl
      000053 4D               [ 1]  115 	tnz	a
      000054 26 2A            [ 1]  116 	jrne	00118$
      000056 7B 03            [ 1]  117 	ld	a, (0x03, sp)
      000058 A1 06            [ 1]  118 	cp	a, #0x06
      00005A 27 24            [ 1]  119 	jreq	00118$
      00005C 7B 03            [ 1]  120 	ld	a, (0x03, sp)
      00005E A1 07            [ 1]  121 	cp	a, #0x07
      000060 27 1E            [ 1]  122 	jreq	00118$
      000062 7B 03            [ 1]  123 	ld	a, (0x03, sp)
      000064 A1 17            [ 1]  124 	cp	a, #0x17
      000066 27 18            [ 1]  125 	jreq	00118$
      000068 7B 03            [ 1]  126 	ld	a, (0x03, sp)
      00006A A1 13            [ 1]  127 	cp	a, #0x13
      00006C 27 12            [ 1]  128 	jreq	00118$
      00006E 7B 03            [ 1]  129 	ld	a, (0x03, sp)
      000070 A1 12            [ 1]  130 	cp	a, #0x12
      000072 27 0C            [ 1]  131 	jreq	00118$
      000074 4B 36            [ 1]  132 	push	#0x36
      000076 5F               [ 1]  133 	clrw	x
      000077 89               [ 2]  134 	pushw	x
      000078 4B 00            [ 1]  135 	push	#0x00
      00007A AEr00r00         [ 2]  136 	ldw	x, #(___str_0+0)
      00007D CDr00r00         [ 4]  137 	call	_assert_failed
      000080                        138 00118$:
                                    139 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 61: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      000080 7B 03            [ 1]  140 	ld	a, (0x03, sp)
      000082 A4 0F            [ 1]  141 	and	a, #0x0f
      000084 88               [ 1]  142 	push	a
      000085 A6 01            [ 1]  143 	ld	a, #0x01
      000087 6B 02            [ 1]  144 	ld	(0x02, sp), a
      000089 84               [ 1]  145 	pop	a
      00008A 4D               [ 1]  146 	tnz	a
      00008B 27 05            [ 1]  147 	jreq	00329$
      00008D                        148 00328$:
      00008D 08 01            [ 1]  149 	sll	(0x01, sp)
      00008F 4A               [ 1]  150 	dec	a
      000090 26 FB            [ 1]  151 	jrne	00328$
      000092                        152 00329$:
                                    153 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 66: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      000092 7B 01            [ 1]  154 	ld	a, (0x01, sp)
      000094 43               [ 1]  155 	cpl	a
      000095 6B 02            [ 1]  156 	ld	(0x02, sp), a
                                    157 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 56: if (((uint8_t)CLK_Peripheral & (uint8_t)0x10) == 0x00)
      000097 7B 03            [ 1]  158 	ld	a, (0x03, sp)
      000099 A5 10            [ 1]  159 	bcp	a, #0x10
      00009B 26 15            [ 1]  160 	jrne	00108$
                                    161 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 61: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      00009D C6 50 C7         [ 1]  162 	ld	a, 0x50c7
                                    163 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 58: if (NewState != DISABLE)
      0000A0 0D 06            [ 1]  164 	tnz	(0x06, sp)
      0000A2 27 07            [ 1]  165 	jreq	00102$
                                    166 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 61: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      0000A4 1A 01            [ 1]  167 	or	a, (0x01, sp)
      0000A6 C7 50 C7         [ 1]  168 	ld	0x50c7, a
      0000A9 20 1A            [ 2]  169 	jra	00110$
      0000AB                        170 00102$:
                                    171 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 66: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      0000AB 14 02            [ 1]  172 	and	a, (0x02, sp)
      0000AD C7 50 C7         [ 1]  173 	ld	0x50c7, a
      0000B0 20 13            [ 2]  174 	jra	00110$
      0000B2                        175 00108$:
                                    176 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 74: CLK->PCKENR2 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      0000B2 C6 50 CA         [ 1]  177 	ld	a, 0x50ca
                                    178 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 71: if (NewState != DISABLE)
      0000B5 0D 06            [ 1]  179 	tnz	(0x06, sp)
      0000B7 27 07            [ 1]  180 	jreq	00105$
                                    181 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 74: CLK->PCKENR2 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      0000B9 1A 01            [ 1]  182 	or	a, (0x01, sp)
      0000BB C7 50 CA         [ 1]  183 	ld	0x50ca, a
      0000BE 20 05            [ 2]  184 	jra	00110$
      0000C0                        185 00105$:
                                    186 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 79: CLK->PCKENR2 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      0000C0 14 02            [ 1]  187 	and	a, (0x02, sp)
      0000C2 C7 50 CA         [ 1]  188 	ld	0x50ca, a
      0000C5                        189 00110$:
                                    190 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfig.c: 82: }
      0000C5 5B 03            [ 2]  191 	addw	sp, #3
      0000C7 85               [ 2]  192 	popw	x
      0000C8 84               [ 1]  193 	pop	a
      0000C9 FC               [ 2]  194 	jp	(x)
                                    195 	.area CODE
                                    196 	.area CONST
                                    197 	.area CONST
      000000                        198 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   199 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_clk_PeripheralClockConfi"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 63 6C 6B 5F 50 65
             72 69 70 68 65 72 61
             6C 43 6C 6F 63 6B 43
             6F 6E 66 69
      00003C 67 2E 63               200 	.ascii "g.c"
      00003F 00                     201 	.db 0x00
                                    202 	.area CODE
                                    203 	.area INITIALIZER
                                    204 	.area CABS (ABS)
