                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk_SYSCLKConfig
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _CLK_SYSCLKConfig
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 47: void CLK_SYSCLKConfig(CLK_Prescaler_TypeDef CLK_Prescaler)
                                     51 ;	-----------------------------------------
                                     52 ;	 function CLK_SYSCLKConfig
                                     53 ;	-----------------------------------------
      000000                         54 _CLK_SYSCLKConfig:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 50: assert_param(IS_CLK_PRESCALER_OK(CLK_Prescaler));
      000001 95               [ 1]   57 	ld	xh, a
      000002 4D               [ 1]   58 	tnz	a
      000003 27 4A            [ 1]   59 	jreq	00107$
      000005 9E               [ 1]   60 	ld	a, xh
      000006 A1 08            [ 1]   61 	cp	a, #0x08
      000008 27 45            [ 1]   62 	jreq	00107$
      00000A 9E               [ 1]   63 	ld	a, xh
      00000B A1 10            [ 1]   64 	cp	a, #0x10
      00000D 27 40            [ 1]   65 	jreq	00107$
      00000F 9E               [ 1]   66 	ld	a, xh
      000010 A1 18            [ 1]   67 	cp	a, #0x18
      000012 27 3B            [ 1]   68 	jreq	00107$
      000014 9E               [ 1]   69 	ld	a, xh
      000015 A1 80            [ 1]   70 	cp	a, #0x80
      000017 27 36            [ 1]   71 	jreq	00107$
      000019 9E               [ 1]   72 	ld	a, xh
      00001A A1 81            [ 1]   73 	cp	a, #0x81
      00001C 27 31            [ 1]   74 	jreq	00107$
      00001E 9E               [ 1]   75 	ld	a, xh
      00001F A1 82            [ 1]   76 	cp	a, #0x82
      000021 27 2C            [ 1]   77 	jreq	00107$
      000023 9E               [ 1]   78 	ld	a, xh
      000024 A1 83            [ 1]   79 	cp	a, #0x83
      000026 27 27            [ 1]   80 	jreq	00107$
      000028 9E               [ 1]   81 	ld	a, xh
      000029 A1 84            [ 1]   82 	cp	a, #0x84
      00002B 27 22            [ 1]   83 	jreq	00107$
      00002D 9E               [ 1]   84 	ld	a, xh
      00002E A1 85            [ 1]   85 	cp	a, #0x85
      000030 27 1D            [ 1]   86 	jreq	00107$
      000032 9E               [ 1]   87 	ld	a, xh
      000033 A1 86            [ 1]   88 	cp	a, #0x86
      000035 27 18            [ 1]   89 	jreq	00107$
      000037 9E               [ 1]   90 	ld	a, xh
      000038 A1 87            [ 1]   91 	cp	a, #0x87
      00003A 27 13            [ 1]   92 	jreq	00107$
      00003C 89               [ 2]   93 	pushw	x
      00003D 4B 32            [ 1]   94 	push	#0x32
      00003F 4B 00            [ 1]   95 	push	#0x00
      000041 4B 00            [ 1]   96 	push	#0x00
      000043 4B 00            [ 1]   97 	push	#0x00
      000045 AEr00r00         [ 2]   98 	ldw	x, #(___str_0+0)
      000048 CDr00r00         [ 4]   99 	call	_assert_failed
      00004B 02               [ 1]  100 	rlwa	x
      00004C 84               [ 1]  101 	pop	a
      00004D 01               [ 1]  102 	rrwa	x
      00004E 84               [ 1]  103 	pop	a
      00004F                        104 00107$:
                                    105 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 54: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      00004F C6 50 C6         [ 1]  106 	ld	a, 0x50c6
                                    107 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 52: if (((uint8_t)CLK_Prescaler & (uint8_t)0x80) == 0x00) /* Bit7 = 0 means HSI divider */
      000052 5D               [ 2]  108 	tnzw	x
      000053 2B 14            [ 1]  109 	jrmi	00102$
                                    110 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 54: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      000055 A4 E7            [ 1]  111 	and	a, #0xe7
      000057 C7 50 C6         [ 1]  112 	ld	0x50c6, a
                                    113 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 55: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_HSIDIV);
      00005A C6 50 C6         [ 1]  114 	ld	a, 0x50c6
      00005D 6B 01            [ 1]  115 	ld	(0x01, sp), a
      00005F 9E               [ 1]  116 	ld	a, xh
      000060 A4 18            [ 1]  117 	and	a, #0x18
      000062 1A 01            [ 1]  118 	or	a, (0x01, sp)
      000064 C7 50 C6         [ 1]  119 	ld	0x50c6, a
      000067 20 12            [ 2]  120 	jra	00104$
      000069                        121 00102$:
                                    122 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 59: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_CPUDIV);
      000069 A4 F8            [ 1]  123 	and	a, #0xf8
      00006B C7 50 C6         [ 1]  124 	ld	0x50c6, a
                                    125 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 60: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_CPUDIV);
      00006E C6 50 C6         [ 1]  126 	ld	a, 0x50c6
      000071 6B 01            [ 1]  127 	ld	(0x01, sp), a
      000073 9E               [ 1]  128 	ld	a, xh
      000074 A4 07            [ 1]  129 	and	a, #0x07
      000076 1A 01            [ 1]  130 	or	a, (0x01, sp)
      000078 C7 50 C6         [ 1]  131 	ld	0x50c6, a
      00007B                        132 00104$:
                                    133 ;	../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c: 62: }
      00007B 84               [ 1]  134 	pop	a
      00007C 81               [ 4]  135 	ret
                                    136 	.area CODE
                                    137 	.area CONST
                                    138 	.area CONST
      000000                        139 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   140 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_clk_SYSCLKConfig.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 63 6C 6B 5F 53 59
             53 43 4C 4B 43 6F 6E
             66 69 67 2E 63
      000036 00                     141 	.db 0x00
                                    142 	.area CODE
                                    143 	.area INITIALIZER
                                    144 	.area CABS (ABS)
