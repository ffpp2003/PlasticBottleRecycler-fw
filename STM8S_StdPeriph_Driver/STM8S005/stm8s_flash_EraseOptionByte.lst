                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_flash_EraseOptionByte
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _FLASH_WaitForLastOperation
                                     12 	.globl _assert_failed
                                     13 	.globl _FLASH_EraseOptionByte
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 
                                     27 ; default segment ordering for linker
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area CONST
                                     32 	.area INITIALIZER
                                     33 	.area CODE
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area CODE
                                     51 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 47: void FLASH_EraseOptionByte(uint16_t Address)
                                     52 ;	-----------------------------------------
                                     53 ;	 function FLASH_EraseOptionByte
                                     54 ;	-----------------------------------------
      000000                         55 _FLASH_EraseOptionByte:
      000000 89               [ 2]   56 	pushw	x
                                     57 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 50: assert_param(IS_OPTION_BYTE_ADDRESS_OK(Address));
      000001 1F 01            [ 2]   58 	ldw	(0x01, sp), x
      000003 A3 48 00         [ 2]   59 	cpw	x, #0x4800
      000006 25 07            [ 1]   60 	jrc	00106$
      000008 1E 01            [ 2]   61 	ldw	x, (0x01, sp)
      00000A A3 48 7F         [ 2]   62 	cpw	x, #0x487f
      00000D 23 0C            [ 2]   63 	jrule	00107$
      00000F                         64 00106$:
      00000F 4B 32            [ 1]   65 	push	#0x32
      000011 5F               [ 1]   66 	clrw	x
      000012 89               [ 2]   67 	pushw	x
      000013 4B 00            [ 1]   68 	push	#0x00
      000015 AEr00r00         [ 2]   69 	ldw	x, #(___str_0+0)
      000018 CDr00r00         [ 4]   70 	call	_assert_failed
      00001B                         71 00107$:
                                     72 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 53: FLASH->CR2 |= FLASH_CR2_OPT;
      00001B 72 1E 50 5B      [ 1]   73 	bset	0x505b, #7
                                     74 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 54: FLASH->NCR2 &= (uint8_t)(~FLASH_NCR2_NOPT);
      00001F 72 1F 50 5C      [ 1]   75 	bres	0x505c, #7
                                     76 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 57: if(Address == 0x4800)
      000023 16 01            [ 2]   77 	ldw	y, (0x01, sp)
                                     78 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 60: *((NEAR uint8_t*)Address) = FLASH_CLEAR_BYTE;
      000025 1E 01            [ 2]   79 	ldw	x, (0x01, sp)
                                     80 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 57: if(Address == 0x4800)
      000027 90 A3 48 00      [ 2]   81 	cpw	y, #0x4800
      00002B 26 03            [ 1]   82 	jrne	00102$
                                     83 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 60: *((NEAR uint8_t*)Address) = FLASH_CLEAR_BYTE;
      00002D 7F               [ 1]   84 	clr	(x)
      00002E 20 07            [ 2]   85 	jra	00103$
      000030                         86 00102$:
                                     87 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 65: *((NEAR uint8_t*)Address) = FLASH_CLEAR_BYTE;
      000030 7F               [ 1]   88 	clr	(x)
                                     89 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 66: *((NEAR uint8_t*)((uint16_t)(Address + (uint16_t)1 ))) = FLASH_SET_BYTE;
      000031 1E 01            [ 2]   90 	ldw	x, (0x01, sp)
      000033 5C               [ 1]   91 	incw	x
      000034 A6 FF            [ 1]   92 	ld	a, #0xff
      000036 F7               [ 1]   93 	ld	(x), a
      000037                         94 00103$:
                                     95 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 68: FLASH_WaitForLastOperation(FLASH_MEMTYPE_PROG);
      000037 A6 FD            [ 1]   96 	ld	a, #0xfd
      000039 CDr00r00         [ 4]   97 	call	_FLASH_WaitForLastOperation
                                     98 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 71: FLASH->CR2 &= (uint8_t)(~FLASH_CR2_OPT);
      00003C 72 1F 50 5B      [ 1]   99 	bres	0x505b, #7
                                    100 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 72: FLASH->NCR2 |= FLASH_NCR2_NOPT;
      000040 72 1E 50 5C      [ 1]  101 	bset	0x505c, #7
                                    102 ;	../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c: 73: }
      000044 85               [ 2]  103 	popw	x
      000045 81               [ 4]  104 	ret
                                    105 	.area CODE
                                    106 	.area CONST
                                    107 	.area CONST
      000000                        108 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   109 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_flash_EraseOptionByte.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 66 6C 61 73 68 5F
             45 72 61 73 65 4F 70
             74 69 6F 6E 42 79 74
             65 2E 63
      00003B 00                     110 	.db 0x00
                                    111 	.area CODE
                                    112 	.area INITIALIZER
                                    113 	.area CABS (ABS)
