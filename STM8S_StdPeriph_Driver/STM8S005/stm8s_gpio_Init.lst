                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_gpio_Init
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _GPIO_Init
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 51: void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, GPIO_Mode_TypeDef GPIO_Mode)
                                     51 ;	-----------------------------------------
                                     52 ;	 function GPIO_Init
                                     53 ;	-----------------------------------------
      000000                         54 _GPIO_Init:
      000000 52 06            [ 2]   55 	sub	sp, #6
      000002 1F 05            [ 2]   56 	ldw	(0x05, sp), x
      000004 6B 04            [ 1]   57 	ld	(0x04, sp), a
                                     58 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 57: assert_param(IS_GPIO_MODE_OK(GPIO_Mode));
      000006 0D 09            [ 1]   59 	tnz	(0x09, sp)
      000008 27 4E            [ 1]   60 	jreq	00116$
      00000A 7B 09            [ 1]   61 	ld	a, (0x09, sp)
      00000C A1 40            [ 1]   62 	cp	a, #0x40
      00000E 27 48            [ 1]   63 	jreq	00116$
      000010 7B 09            [ 1]   64 	ld	a, (0x09, sp)
      000012 A1 20            [ 1]   65 	cp	a, #0x20
      000014 27 42            [ 1]   66 	jreq	00116$
      000016 7B 09            [ 1]   67 	ld	a, (0x09, sp)
      000018 A1 60            [ 1]   68 	cp	a, #0x60
      00001A 27 3C            [ 1]   69 	jreq	00116$
      00001C 7B 09            [ 1]   70 	ld	a, (0x09, sp)
      00001E A1 A0            [ 1]   71 	cp	a, #0xa0
      000020 27 36            [ 1]   72 	jreq	00116$
      000022 7B 09            [ 1]   73 	ld	a, (0x09, sp)
      000024 A1 E0            [ 1]   74 	cp	a, #0xe0
      000026 27 30            [ 1]   75 	jreq	00116$
      000028 7B 09            [ 1]   76 	ld	a, (0x09, sp)
      00002A A1 80            [ 1]   77 	cp	a, #0x80
      00002C 27 2A            [ 1]   78 	jreq	00116$
      00002E 7B 09            [ 1]   79 	ld	a, (0x09, sp)
      000030 A1 C0            [ 1]   80 	cp	a, #0xc0
      000032 27 24            [ 1]   81 	jreq	00116$
      000034 7B 09            [ 1]   82 	ld	a, (0x09, sp)
      000036 A1 B0            [ 1]   83 	cp	a, #0xb0
      000038 27 1E            [ 1]   84 	jreq	00116$
      00003A 7B 09            [ 1]   85 	ld	a, (0x09, sp)
      00003C A1 F0            [ 1]   86 	cp	a, #0xf0
      00003E 27 18            [ 1]   87 	jreq	00116$
      000040 7B 09            [ 1]   88 	ld	a, (0x09, sp)
      000042 A1 90            [ 1]   89 	cp	a, #0x90
      000044 27 12            [ 1]   90 	jreq	00116$
      000046 7B 09            [ 1]   91 	ld	a, (0x09, sp)
      000048 A1 D0            [ 1]   92 	cp	a, #0xd0
      00004A 27 0C            [ 1]   93 	jreq	00116$
      00004C 4B 39            [ 1]   94 	push	#0x39
      00004E 5F               [ 1]   95 	clrw	x
      00004F 89               [ 2]   96 	pushw	x
      000050 4B 00            [ 1]   97 	push	#0x00
      000052 AEr00r00         [ 2]   98 	ldw	x, #(___str_0+0)
      000055 CDr00r00         [ 4]   99 	call	_assert_failed
      000058                        100 00116$:
                                    101 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 58: assert_param(IS_GPIO_PIN_OK(GPIO_Pin));
      000058 0D 04            [ 1]  102 	tnz	(0x04, sp)
      00005A 26 0C            [ 1]  103 	jrne	00151$
      00005C 4B 3A            [ 1]  104 	push	#0x3a
      00005E 5F               [ 1]  105 	clrw	x
      00005F 89               [ 2]  106 	pushw	x
      000060 4B 00            [ 1]  107 	push	#0x00
      000062 AEr00r00         [ 2]  108 	ldw	x, #(___str_0+0)
      000065 CDr00r00         [ 4]  109 	call	_assert_failed
      000068                        110 00151$:
                                    111 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 61: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      000068 1E 05            [ 2]  112 	ldw	x, (0x05, sp)
      00006A 1C 00 04         [ 2]  113 	addw	x, #0x0004
      00006D 1F 01            [ 2]  114 	ldw	(0x01, sp), x
      00006F F6               [ 1]  115 	ld	a, (x)
      000070 88               [ 1]  116 	push	a
      000071 7B 05            [ 1]  117 	ld	a, (0x05, sp)
      000073 43               [ 1]  118 	cpl	a
      000074 6B 04            [ 1]  119 	ld	(0x04, sp), a
      000076 84               [ 1]  120 	pop	a
      000077 14 03            [ 1]  121 	and	a, (0x03, sp)
      000079 1E 01            [ 2]  122 	ldw	x, (0x01, sp)
      00007B F7               [ 1]  123 	ld	(x), a
                                    124 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 78: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      00007C 1E 05            [ 2]  125 	ldw	x, (0x05, sp)
      00007E 5C               [ 1]  126 	incw	x
      00007F 5C               [ 1]  127 	incw	x
                                    128 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 67: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
      000080 0D 09            [ 1]  129 	tnz	(0x09, sp)
      000082 2A 20            [ 1]  130 	jrpl	00105$
                                    131 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 71: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      000084 16 05            [ 2]  132 	ldw	y, (0x05, sp)
      000086 90 F6            [ 1]  133 	ld	a, (y)
                                    134 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 69: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
      000088 88               [ 1]  135 	push	a
      000089 7B 0A            [ 1]  136 	ld	a, (0x0a, sp)
      00008B A5 10            [ 1]  137 	bcp	a, #0x10
      00008D 84               [ 1]  138 	pop	a
      00008E 27 08            [ 1]  139 	jreq	00102$
                                    140 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 71: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      000090 1A 04            [ 1]  141 	or	a, (0x04, sp)
      000092 16 05            [ 2]  142 	ldw	y, (0x05, sp)
      000094 90 F7            [ 1]  143 	ld	(y), a
      000096 20 06            [ 2]  144 	jra	00103$
      000098                        145 00102$:
                                    146 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 75: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
      000098 14 03            [ 1]  147 	and	a, (0x03, sp)
      00009A 16 05            [ 2]  148 	ldw	y, (0x05, sp)
      00009C 90 F7            [ 1]  149 	ld	(y), a
      00009E                        150 00103$:
                                    151 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 78: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      00009E F6               [ 1]  152 	ld	a, (x)
      00009F 1A 04            [ 1]  153 	or	a, (0x04, sp)
      0000A1 F7               [ 1]  154 	ld	(x), a
      0000A2 20 04            [ 2]  155 	jra	00106$
      0000A4                        156 00105$:
                                    157 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 83: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
      0000A4 F6               [ 1]  158 	ld	a, (x)
      0000A5 14 03            [ 1]  159 	and	a, (0x03, sp)
      0000A7 F7               [ 1]  160 	ld	(x), a
      0000A8                        161 00106$:
                                    162 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 92: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      0000A8 1E 05            [ 2]  163 	ldw	x, (0x05, sp)
      0000AA 1C 00 03         [ 2]  164 	addw	x, #0x0003
      0000AD F6               [ 1]  165 	ld	a, (x)
                                    166 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 90: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
      0000AE 88               [ 1]  167 	push	a
      0000AF 7B 0A            [ 1]  168 	ld	a, (0x0a, sp)
      0000B1 A5 40            [ 1]  169 	bcp	a, #0x40
      0000B3 84               [ 1]  170 	pop	a
      0000B4 27 05            [ 1]  171 	jreq	00108$
                                    172 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 92: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      0000B6 1A 04            [ 1]  173 	or	a, (0x04, sp)
      0000B8 F7               [ 1]  174 	ld	(x), a
      0000B9 20 03            [ 2]  175 	jra	00109$
      0000BB                        176 00108$:
                                    177 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 96: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
      0000BB 14 03            [ 1]  178 	and	a, (0x03, sp)
      0000BD F7               [ 1]  179 	ld	(x), a
      0000BE                        180 00109$:
                                    181 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 61: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      0000BE 1E 01            [ 2]  182 	ldw	x, (0x01, sp)
      0000C0 F6               [ 1]  183 	ld	a, (x)
                                    184 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 103: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
      0000C1 88               [ 1]  185 	push	a
      0000C2 7B 0A            [ 1]  186 	ld	a, (0x0a, sp)
      0000C4 A5 20            [ 1]  187 	bcp	a, #0x20
      0000C6 84               [ 1]  188 	pop	a
      0000C7 27 07            [ 1]  189 	jreq	00111$
                                    190 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 105: GPIOx->CR2 |= (uint8_t)GPIO_Pin;
      0000C9 1A 04            [ 1]  191 	or	a, (0x04, sp)
      0000CB 1E 01            [ 2]  192 	ldw	x, (0x01, sp)
      0000CD F7               [ 1]  193 	ld	(x), a
      0000CE 20 05            [ 2]  194 	jra	00113$
      0000D0                        195 00111$:
                                    196 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 109: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      0000D0 14 03            [ 1]  197 	and	a, (0x03, sp)
      0000D2 1E 01            [ 2]  198 	ldw	x, (0x01, sp)
      0000D4 F7               [ 1]  199 	ld	(x), a
      0000D5                        200 00113$:
                                    201 ;	../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c: 111: }
      0000D5 5B 06            [ 2]  202 	addw	sp, #6
      0000D7 85               [ 2]  203 	popw	x
      0000D8 84               [ 1]  204 	pop	a
      0000D9 FC               [ 2]  205 	jp	(x)
                                    206 	.area CODE
                                    207 	.area CONST
                                    208 	.area CONST
      000000                        209 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   210 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_gpio_Init.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 67 70 69 6F 5F 49
             6E 69 74 2E 63
      00002F 00                     211 	.db 0x00
                                    212 	.area CODE
                                    213 	.area INITIALIZER
                                    214 	.area CABS (ABS)
