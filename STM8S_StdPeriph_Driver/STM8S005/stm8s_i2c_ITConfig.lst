                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_i2c_ITConfig
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _I2C_ITConfig
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 50: void I2C_ITConfig(I2C_IT_TypeDef I2C_IT, FunctionalState NewState)
                                     51 ;	-----------------------------------------
                                     52 ;	 function I2C_ITConfig
                                     53 ;	-----------------------------------------
      000000                         54 _I2C_ITConfig:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 53: assert_param(IS_I2C_INTERRUPT_OK(I2C_IT));
      000001 A1 01            [ 1]   57 	cp	a, #0x01
      000003 27 26            [ 1]   58 	jreq	00107$
      000005 A1 02            [ 1]   59 	cp	a, #0x02
      000007 27 22            [ 1]   60 	jreq	00107$
      000009 A1 04            [ 1]   61 	cp	a, #0x04
      00000B 27 1E            [ 1]   62 	jreq	00107$
      00000D A1 03            [ 1]   63 	cp	a, #0x03
      00000F 27 1A            [ 1]   64 	jreq	00107$
      000011 A1 05            [ 1]   65 	cp	a, #0x05
      000013 27 16            [ 1]   66 	jreq	00107$
      000015 A1 06            [ 1]   67 	cp	a, #0x06
      000017 27 12            [ 1]   68 	jreq	00107$
      000019 A1 07            [ 1]   69 	cp	a, #0x07
      00001B 27 0E            [ 1]   70 	jreq	00107$
      00001D 88               [ 1]   71 	push	a
      00001E 4B 35            [ 1]   72 	push	#0x35
      000020 5F               [ 1]   73 	clrw	x
      000021 89               [ 2]   74 	pushw	x
      000022 4B 00            [ 1]   75 	push	#0x00
      000024 AEr00r00         [ 2]   76 	ldw	x, #(___str_0+0)
      000027 CDr00r00         [ 4]   77 	call	_assert_failed
      00002A 84               [ 1]   78 	pop	a
      00002B                         79 00107$:
                                     80 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 54: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00002B 0D 04            [ 1]   81 	tnz	(0x04, sp)
      00002D 27 12            [ 1]   82 	jreq	00127$
      00002F 0D 04            [ 1]   83 	tnz	(0x04, sp)
      000031 26 0E            [ 1]   84 	jrne	00127$
      000033 88               [ 1]   85 	push	a
      000034 4B 36            [ 1]   86 	push	#0x36
      000036 5F               [ 1]   87 	clrw	x
      000037 89               [ 2]   88 	pushw	x
      000038 4B 00            [ 1]   89 	push	#0x00
      00003A AEr00r00         [ 2]   90 	ldw	x, #(___str_0+0)
      00003D CDr00r00         [ 4]   91 	call	_assert_failed
      000040 84               [ 1]   92 	pop	a
      000041                         93 00127$:
                                     94 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 59: I2C->ITR |= (uint8_t)I2C_IT;
      000041 AE 52 1A         [ 2]   95 	ldw	x, #0x521a
      000044 88               [ 1]   96 	push	a
      000045 F6               [ 1]   97 	ld	a, (x)
      000046 6B 02            [ 1]   98 	ld	(0x02, sp), a
      000048 84               [ 1]   99 	pop	a
                                    100 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 56: if (NewState != DISABLE)
      000049 0D 04            [ 1]  101 	tnz	(0x04, sp)
      00004B 27 07            [ 1]  102 	jreq	00102$
                                    103 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 59: I2C->ITR |= (uint8_t)I2C_IT;
      00004D 1A 01            [ 1]  104 	or	a, (0x01, sp)
      00004F C7 52 1A         [ 1]  105 	ld	0x521a, a
      000052 20 06            [ 2]  106 	jra	00104$
      000054                        107 00102$:
                                    108 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 64: I2C->ITR &= (uint8_t)(~(uint8_t)I2C_IT);
      000054 43               [ 1]  109 	cpl	a
      000055 14 01            [ 1]  110 	and	a, (0x01, sp)
      000057 C7 52 1A         [ 1]  111 	ld	0x521a, a
      00005A                        112 00104$:
                                    113 ;	../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c: 66: }
      00005A 84               [ 1]  114 	pop	a
      00005B 85               [ 2]  115 	popw	x
      00005C 84               [ 1]  116 	pop	a
      00005D FC               [ 2]  117 	jp	(x)
                                    118 	.area CODE
                                    119 	.area CONST
                                    120 	.area CONST
      000000                        121 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   122 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_i2c_ITConfig.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 69 32 63 5F 49 54
             43 6F 6E 66 69 67 2E
             63
      000032 00                     123 	.db 0x00
                                    124 	.area CODE
                                    125 	.area INITIALIZER
                                    126 	.area CABS (ABS)
