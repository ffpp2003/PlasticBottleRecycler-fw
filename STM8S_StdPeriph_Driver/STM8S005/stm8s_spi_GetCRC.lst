                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_spi_GetCRC
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _SPI_GetCRC
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 46: uint8_t SPI_GetCRC(SPI_CRC_TypeDef SPI_CRC)
                                     51 ;	-----------------------------------------
                                     52 ;	 function SPI_GetCRC
                                     53 ;	-----------------------------------------
      000000                         54 _SPI_GetCRC:
                                     55 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 51: assert_param(IS_SPI_CRC_OK(SPI_CRC));
      000000 4D               [ 1]   56 	tnz	a
      000001 26 11            [ 1]   57 	jrne	00107$
      000003 4D               [ 1]   58 	tnz	a
      000004 27 0E            [ 1]   59 	jreq	00107$
      000006 88               [ 1]   60 	push	a
      000007 4B 33            [ 1]   61 	push	#0x33
      000009 5F               [ 1]   62 	clrw	x
      00000A 89               [ 2]   63 	pushw	x
      00000B 4B 00            [ 1]   64 	push	#0x00
      00000D AEr00r00         [ 2]   65 	ldw	x, #(___str_0+0)
      000010 CDr00r00         [ 4]   66 	call	_assert_failed
      000013 84               [ 1]   67 	pop	a
      000014                         68 00107$:
                                     69 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 53: if (SPI_CRC != SPI_CRC_RX)
      000014 4D               [ 1]   70 	tnz	a
      000015 27 04            [ 1]   71 	jreq	00102$
                                     72 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 55: crcreg = SPI->TXCRCR;  /* Get the Tx CRC register*/
      000017 C6 52 07         [ 1]   73 	ld	a, 0x5207
      00001A 81               [ 4]   74 	ret
      00001B                         75 00102$:
                                     76 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 59: crcreg = SPI->RXCRCR; /* Get the Rx CRC register*/
      00001B C6 52 06         [ 1]   77 	ld	a, 0x5206
                                     78 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 63: return crcreg;
                                     79 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c: 64: }
      00001E 81               [ 4]   80 	ret
                                     81 	.area CODE
                                     82 	.area CONST
                                     83 	.area CONST
      000000                         84 ___str_0:
      000000 2E 2E 2F 53 54 4D 38    85 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_spi_GetCRC.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 73 70 69 5F 47 65
             74 43 52 43 2E 63
      000030 00                      86 	.db 0x00
                                     87 	.area CODE
                                     88 	.area INITIALIZER
                                     89 	.area CABS (ABS)
