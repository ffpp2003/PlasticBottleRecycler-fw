                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_spi_GetFlagStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _SPI_GetFlagStatus
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 49: FlagStatus SPI_GetFlagStatus(SPI_Flag_TypeDef SPI_FLAG)
                                     51 ;	-----------------------------------------
                                     52 ;	 function SPI_GetFlagStatus
                                     53 ;	-----------------------------------------
      000000                         54 _SPI_GetFlagStatus:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 53: assert_param(IS_SPI_FLAGS_OK(SPI_FLAG));
      000001 A1 40            [ 1]   57 	cp	a, #0x40
      000003 27 26            [ 1]   58 	jreq	00107$
      000005 A1 20            [ 1]   59 	cp	a, #0x20
      000007 27 22            [ 1]   60 	jreq	00107$
      000009 A1 10            [ 1]   61 	cp	a, #0x10
      00000B 27 1E            [ 1]   62 	jreq	00107$
      00000D A1 08            [ 1]   63 	cp	a, #0x08
      00000F 27 1A            [ 1]   64 	jreq	00107$
      000011 A1 02            [ 1]   65 	cp	a, #0x02
      000013 27 16            [ 1]   66 	jreq	00107$
      000015 A1 01            [ 1]   67 	cp	a, #0x01
      000017 27 12            [ 1]   68 	jreq	00107$
      000019 A1 80            [ 1]   69 	cp	a, #0x80
      00001B 27 0E            [ 1]   70 	jreq	00107$
      00001D 88               [ 1]   71 	push	a
      00001E 4B 35            [ 1]   72 	push	#0x35
      000020 5F               [ 1]   73 	clrw	x
      000021 89               [ 2]   74 	pushw	x
      000022 4B 00            [ 1]   75 	push	#0x00
      000024 AEr00r00         [ 2]   76 	ldw	x, #(___str_0+0)
      000027 CDr00r00         [ 4]   77 	call	_assert_failed
      00002A 84               [ 1]   78 	pop	a
      00002B                         79 00107$:
                                     80 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 56: if ((SPI->SR & (uint8_t)SPI_FLAG) != (uint8_t)RESET)
      00002B AE 52 03         [ 2]   81 	ldw	x, #0x5203
      00002E 88               [ 1]   82 	push	a
      00002F F6               [ 1]   83 	ld	a, (x)
      000030 6B 02            [ 1]   84 	ld	(0x02, sp), a
      000032 84               [ 1]   85 	pop	a
      000033 14 01            [ 1]   86 	and	a, (0x01, sp)
      000035 27 03            [ 1]   87 	jreq	00102$
                                     88 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 58: status = SET; /* SPI_FLAG is set */
      000037 A6 01            [ 1]   89 	ld	a, #0x01
                                     90 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 62: status = RESET; /* SPI_FLAG is reset*/
      000039 21                      91 	.byte 0x21
      00003A                         92 00102$:
      00003A 4F               [ 1]   93 	clr	a
      00003B                         94 00103$:
                                     95 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 66: return status;
                                     96 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c: 67: }
      00003B 5B 01            [ 2]   97 	addw	sp, #1
      00003D 81               [ 4]   98 	ret
                                     99 	.area CODE
                                    100 	.area CONST
                                    101 	.area CONST
      000000                        102 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   103 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_spi_GetFlagStatus.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 73 70 69 5F 47 65
             74 46 6C 61 67 53 74
             61 74 75 73 2E 63
      000037 00                     104 	.db 0x00
                                    105 	.area CODE
                                    106 	.area INITIALIZER
                                    107 	.area CABS (ABS)
