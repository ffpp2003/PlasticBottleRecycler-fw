                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_spi_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _SPI_GetITStatus
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 54: ITStatus SPI_GetITStatus(SPI_IT_TypeDef SPI_IT)
                                     51 ;	-----------------------------------------
                                     52 ;	 function SPI_GetITStatus
                                     53 ;	-----------------------------------------
      000000                         54 _SPI_GetITStatus:
      000000 89               [ 2]   55 	pushw	x
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 61: assert_param(IS_SPI_GET_IT_OK(SPI_IT));
      000001 A1 65            [ 1]   57 	cp	a, #0x65
      000003 27 22            [ 1]   58 	jreq	00108$
      000005 A1 55            [ 1]   59 	cp	a, #0x55
      000007 27 1E            [ 1]   60 	jreq	00108$
      000009 A1 45            [ 1]   61 	cp	a, #0x45
      00000B 27 1A            [ 1]   62 	jreq	00108$
      00000D A1 34            [ 1]   63 	cp	a, #0x34
      00000F 27 16            [ 1]   64 	jreq	00108$
      000011 A1 17            [ 1]   65 	cp	a, #0x17
      000013 27 12            [ 1]   66 	jreq	00108$
      000015 A1 06            [ 1]   67 	cp	a, #0x06
      000017 27 0E            [ 1]   68 	jreq	00108$
      000019 88               [ 1]   69 	push	a
      00001A 4B 3D            [ 1]   70 	push	#0x3d
      00001C 5F               [ 1]   71 	clrw	x
      00001D 89               [ 2]   72 	pushw	x
      00001E 4B 00            [ 1]   73 	push	#0x00
      000020 AEr00r00         [ 2]   74 	ldw	x, #(___str_0+0)
      000023 CDr00r00         [ 4]   75 	call	_assert_failed
      000026 84               [ 1]   76 	pop	a
      000027                         77 00108$:
                                     78 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 63: itpos = (uint8_t)((uint8_t)1 << ((uint8_t)SPI_IT & (uint8_t)0x0F));
      000027 88               [ 1]   79 	push	a
      000028 A4 0F            [ 1]   80 	and	a, #0x0f
      00002A 97               [ 1]   81 	ld	xl, a
      00002B A6 01            [ 1]   82 	ld	a, #0x01
      00002D 6B 02            [ 1]   83 	ld	(0x02, sp), a
      00002F 9F               [ 1]   84 	ld	a, xl
      000030 4D               [ 1]   85 	tnz	a
      000031 27 05            [ 1]   86 	jreq	00199$
      000033                         87 00198$:
      000033 08 02            [ 1]   88 	sll	(0x02, sp)
      000035 4A               [ 1]   89 	dec	a
      000036 26 FB            [ 1]   90 	jrne	00198$
      000038                         91 00199$:
      000038 84               [ 1]   92 	pop	a
                                     93 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 66: itmask1 = (uint8_t)((uint8_t)SPI_IT >> (uint8_t)4);
      000039 4E               [ 1]   94 	swap	a
      00003A A4 0F            [ 1]   95 	and	a, #0x0f
                                     96 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 68: itmask2 = (uint8_t)((uint8_t)1 << itmask1);
      00003C 88               [ 1]   97 	push	a
      00003D A6 01            [ 1]   98 	ld	a, #0x01
      00003F 6B 03            [ 1]   99 	ld	(0x03, sp), a
      000041 84               [ 1]  100 	pop	a
      000042 4D               [ 1]  101 	tnz	a
      000043 27 05            [ 1]  102 	jreq	00201$
      000045                        103 00200$:
      000045 08 02            [ 1]  104 	sll	(0x02, sp)
      000047 4A               [ 1]  105 	dec	a
      000048 26 FB            [ 1]  106 	jrne	00200$
      00004A                        107 00201$:
                                    108 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 70: enablestatus = (uint8_t)((uint8_t)SPI->SR & itmask2);
      00004A C6 52 03         [ 1]  109 	ld	a, 0x5203
      00004D 14 02            [ 1]  110 	and	a, (0x02, sp)
      00004F 97               [ 1]  111 	ld	xl, a
                                    112 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 72: if (((SPI->ICR & itpos) != RESET) && enablestatus)
      000050 C6 52 02         [ 1]  113 	ld	a, 0x5202
      000053 14 01            [ 1]  114 	and	a, (0x01, sp)
      000055 27 07            [ 1]  115 	jreq	00102$
      000057 9F               [ 1]  116 	ld	a, xl
      000058 4D               [ 1]  117 	tnz	a
      000059 27 03            [ 1]  118 	jreq	00102$
                                    119 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 75: pendingbitstatus = SET;
      00005B A6 01            [ 1]  120 	ld	a, #0x01
                                    121 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 80: pendingbitstatus = RESET;
      00005D 21                     122 	.byte 0x21
      00005E                        123 00102$:
      00005E 4F               [ 1]  124 	clr	a
      00005F                        125 00103$:
                                    126 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 83: return  pendingbitstatus;
                                    127 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c: 84: }
      00005F 85               [ 2]  128 	popw	x
      000060 81               [ 4]  129 	ret
                                    130 	.area CODE
                                    131 	.area CONST
                                    132 	.area CONST
      000000                        133 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   134 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_spi_GetITStatus.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 73 70 69 5F 47 65
             74 49 54 53 74 61 74
             75 73 2E 63
      000035 00                     135 	.db 0x00
                                    136 	.area CODE
                                    137 	.area INITIALIZER
                                    138 	.area CABS (ABS)
