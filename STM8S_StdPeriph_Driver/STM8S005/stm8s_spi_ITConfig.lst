                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_spi_ITConfig
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _SPI_ITConfig
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 48: void SPI_ITConfig(SPI_IT_TypeDef SPI_IT, FunctionalState NewState)
                                     51 ;	-----------------------------------------
                                     52 ;	 function SPI_ITConfig
                                     53 ;	-----------------------------------------
      000000                         54 _SPI_ITConfig:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 52: assert_param(IS_SPI_CONFIG_IT_OK(SPI_IT));
      000001 A1 17            [ 1]   57 	cp	a, #0x17
      000003 27 1A            [ 1]   58 	jreq	00107$
      000005 A1 06            [ 1]   59 	cp	a, #0x06
      000007 27 16            [ 1]   60 	jreq	00107$
      000009 A1 05            [ 1]   61 	cp	a, #0x05
      00000B 27 12            [ 1]   62 	jreq	00107$
      00000D A1 34            [ 1]   63 	cp	a, #0x34
      00000F 27 0E            [ 1]   64 	jreq	00107$
      000011 88               [ 1]   65 	push	a
      000012 4B 34            [ 1]   66 	push	#0x34
      000014 5F               [ 1]   67 	clrw	x
      000015 89               [ 2]   68 	pushw	x
      000016 4B 00            [ 1]   69 	push	#0x00
      000018 AEr00r00         [ 2]   70 	ldw	x, #(___str_0+0)
      00001B CDr00r00         [ 4]   71 	call	_assert_failed
      00001E 84               [ 1]   72 	pop	a
      00001F                         73 00107$:
                                     74 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 53: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00001F 0D 04            [ 1]   75 	tnz	(0x04, sp)
      000021 27 12            [ 1]   76 	jreq	00118$
      000023 0D 04            [ 1]   77 	tnz	(0x04, sp)
      000025 26 0E            [ 1]   78 	jrne	00118$
      000027 88               [ 1]   79 	push	a
      000028 4B 35            [ 1]   80 	push	#0x35
      00002A 5F               [ 1]   81 	clrw	x
      00002B 89               [ 2]   82 	pushw	x
      00002C 4B 00            [ 1]   83 	push	#0x00
      00002E AEr00r00         [ 2]   84 	ldw	x, #(___str_0+0)
      000031 CDr00r00         [ 4]   85 	call	_assert_failed
      000034 84               [ 1]   86 	pop	a
      000035                         87 00118$:
                                     88 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 56: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)SPI_IT & (uint8_t)0x0F));
      000035 A4 0F            [ 1]   89 	and	a, #0x0f
      000037 97               [ 1]   90 	ld	xl, a
      000038 A6 01            [ 1]   91 	ld	a, #0x01
      00003A 88               [ 1]   92 	push	a
      00003B 9F               [ 1]   93 	ld	a, xl
      00003C 4D               [ 1]   94 	tnz	a
      00003D 27 05            [ 1]   95 	jreq	00186$
      00003F                         96 00185$:
      00003F 08 01            [ 1]   97 	sll	(1, sp)
      000041 4A               [ 1]   98 	dec	a
      000042 26 FB            [ 1]   99 	jrne	00185$
      000044                        100 00186$:
      000044 84               [ 1]  101 	pop	a
                                    102 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 60: SPI->ICR |= itpos; /* Enable interrupt*/
      000045 AE 52 02         [ 2]  103 	ldw	x, #0x5202
      000048 88               [ 1]  104 	push	a
      000049 F6               [ 1]  105 	ld	a, (x)
      00004A 6B 02            [ 1]  106 	ld	(0x02, sp), a
      00004C 84               [ 1]  107 	pop	a
                                    108 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 58: if (NewState != DISABLE)
      00004D 0D 04            [ 1]  109 	tnz	(0x04, sp)
      00004F 27 07            [ 1]  110 	jreq	00102$
                                    111 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 60: SPI->ICR |= itpos; /* Enable interrupt*/
      000051 1A 01            [ 1]  112 	or	a, (0x01, sp)
      000053 C7 52 02         [ 1]  113 	ld	0x5202, a
      000056 20 06            [ 2]  114 	jra	00104$
      000058                        115 00102$:
                                    116 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 64: SPI->ICR &= (uint8_t)(~itpos); /* Disable interrupt*/
      000058 43               [ 1]  117 	cpl	a
      000059 14 01            [ 1]  118 	and	a, (0x01, sp)
      00005B C7 52 02         [ 1]  119 	ld	0x5202, a
      00005E                        120 00104$:
                                    121 ;	../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c: 66: }
      00005E 84               [ 1]  122 	pop	a
      00005F 85               [ 2]  123 	popw	x
      000060 84               [ 1]  124 	pop	a
      000061 FC               [ 2]  125 	jp	(x)
                                    126 	.area CODE
                                    127 	.area CONST
                                    128 	.area CONST
      000000                        129 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   130 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_spi_ITConfig.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 73 70 69 5F 49 54
             43 6F 6E 66 69 67 2E
             63
      000032 00                     131 	.db 0x00
                                    132 	.area CODE
                                    133 	.area INITIALIZER
                                    134 	.area CABS (ABS)
