                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim1_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _TIM1_GetITStatus
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 56: ITStatus TIM1_GetITStatus(TIM1_IT_TypeDef TIM1_IT)
                                     51 ;	-----------------------------------------
                                     52 ;	 function TIM1_GetITStatus
                                     53 ;	-----------------------------------------
      000000                         54 _TIM1_GetITStatus:
      000000 89               [ 2]   55 	pushw	x
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 62: assert_param(IS_TIM1_GET_IT_OK(TIM1_IT));
      000001 A1 01            [ 1]   57 	cp	a, #0x01
      000003 27 2A            [ 1]   58 	jreq	00108$
      000005 A1 02            [ 1]   59 	cp	a, #0x02
      000007 27 26            [ 1]   60 	jreq	00108$
      000009 A1 04            [ 1]   61 	cp	a, #0x04
      00000B 27 22            [ 1]   62 	jreq	00108$
      00000D A1 08            [ 1]   63 	cp	a, #0x08
      00000F 27 1E            [ 1]   64 	jreq	00108$
      000011 A1 10            [ 1]   65 	cp	a, #0x10
      000013 27 1A            [ 1]   66 	jreq	00108$
      000015 A1 20            [ 1]   67 	cp	a, #0x20
      000017 27 16            [ 1]   68 	jreq	00108$
      000019 A1 40            [ 1]   69 	cp	a, #0x40
      00001B 27 12            [ 1]   70 	jreq	00108$
      00001D A1 80            [ 1]   71 	cp	a, #0x80
      00001F 27 0E            [ 1]   72 	jreq	00108$
      000021 88               [ 1]   73 	push	a
      000022 4B 3E            [ 1]   74 	push	#0x3e
      000024 5F               [ 1]   75 	clrw	x
      000025 89               [ 2]   76 	pushw	x
      000026 4B 00            [ 1]   77 	push	#0x00
      000028 AEr00r00         [ 2]   78 	ldw	x, #(___str_0+0)
      00002B CDr00r00         [ 4]   79 	call	_assert_failed
      00002E 84               [ 1]   80 	pop	a
      00002F                         81 00108$:
                                     82 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 64: TIM1_itStatus = (uint8_t)(TIM1->SR1 & (uint8_t)TIM1_IT);
      00002F AE 52 55         [ 2]   83 	ldw	x, #0x5255
      000032 88               [ 1]   84 	push	a
      000033 F6               [ 1]   85 	ld	a, (x)
      000034 6B 03            [ 1]   86 	ld	(0x03, sp), a
      000036 84               [ 1]   87 	pop	a
      000037 88               [ 1]   88 	push	a
      000038 14 03            [ 1]   89 	and	a, (0x03, sp)
      00003A 6B 02            [ 1]   90 	ld	(0x02, sp), a
      00003C 84               [ 1]   91 	pop	a
                                     92 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 66: TIM1_itEnable = (uint8_t)(TIM1->IER & (uint8_t)TIM1_IT);
      00003D AE 52 54         [ 2]   93 	ldw	x, #0x5254
      000040 88               [ 1]   94 	push	a
      000041 F6               [ 1]   95 	ld	a, (x)
      000042 6B 03            [ 1]   96 	ld	(0x03, sp), a
      000044 84               [ 1]   97 	pop	a
      000045 14 02            [ 1]   98 	and	a, (0x02, sp)
                                     99 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 68: if ((TIM1_itStatus != (uint8_t)RESET ) && (TIM1_itEnable != (uint8_t)RESET ))
      000047 0D 01            [ 1]  100 	tnz	(0x01, sp)
      000049 27 06            [ 1]  101 	jreq	00102$
      00004B 4D               [ 1]  102 	tnz	a
      00004C 27 03            [ 1]  103 	jreq	00102$
                                    104 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 70: bitstatus = SET;
      00004E A6 01            [ 1]  105 	ld	a, #0x01
                                    106 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 74: bitstatus = RESET;
      000050 21                     107 	.byte 0x21
      000051                        108 00102$:
      000051 4F               [ 1]  109 	clr	a
      000052                        110 00103$:
                                    111 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 76: return (ITStatus)(bitstatus);
                                    112 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c: 77: }
      000052 85               [ 2]  113 	popw	x
      000053 81               [ 4]  114 	ret
                                    115 	.area CODE
                                    116 	.area CONST
                                    117 	.area CONST
      000000                        118 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   119 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_tim1_GetITStatus.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 74 69 6D 31 5F 47
             65 74 49 54 53 74 61
             74 75 73 2E 63
      000036 00                     120 	.db 0x00
                                    121 	.area CODE
                                    122 	.area INITIALIZER
                                    123 	.area CABS (ABS)
