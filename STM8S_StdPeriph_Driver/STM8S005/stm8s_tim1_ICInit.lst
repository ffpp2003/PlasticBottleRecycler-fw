                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim1_ICInit
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM1_TI4_Config
                                     12 	.globl _TIM1_TI3_Config
                                     13 	.globl _TIM1_TI2_Config
                                     14 	.globl _TIM1_TI1_Config
                                     15 	.globl _TIM1_SetIC4Prescaler
                                     16 	.globl _TIM1_SetIC3Prescaler
                                     17 	.globl _TIM1_SetIC2Prescaler
                                     18 	.globl _TIM1_SetIC1Prescaler
                                     19 	.globl _assert_failed
                                     20 	.globl _TIM1_ICInit
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DABS (ABS)
                                     33 
                                     34 ; default segment ordering for linker
                                     35 	.area HOME
                                     36 	.area GSINIT
                                     37 	.area GSFINAL
                                     38 	.area CONST
                                     39 	.area INITIALIZER
                                     40 	.area CODE
                                     41 
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area GSINIT
                                     47 	.area GSFINAL
                                     48 	.area GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
                                     53 	.area HOME
                                     54 ;--------------------------------------------------------
                                     55 ; code
                                     56 ;--------------------------------------------------------
                                     57 	.area CODE
                                     58 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 54: void TIM1_ICInit(TIM1_Channel_TypeDef TIM1_Channel,
                                     59 ;	-----------------------------------------
                                     60 ;	 function TIM1_ICInit
                                     61 ;	-----------------------------------------
      000000                         62 _TIM1_ICInit:
      000000 52 03            [ 2]   63 	sub	sp, #3
                                     64 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 61: assert_param(IS_TIM1_CHANNEL_OK(TIM1_Channel));
      000002 6B 03            [ 1]   65 	ld	(0x03, sp), a
      000004 4A               [ 1]   66 	dec	a
      000005 26 05            [ 1]   67 	jrne	00269$
      000007 A6 01            [ 1]   68 	ld	a, #0x01
      000009 6B 01            [ 1]   69 	ld	(0x01, sp), a
      00000B C5                      70 	.byte 0xc5
      00000C                         71 00269$:
      00000C 0F 01            [ 1]   72 	clr	(0x01, sp)
      00000E                         73 00270$:
      00000E 7B 03            [ 1]   74 	ld	a, (0x03, sp)
      000010 A0 02            [ 1]   75 	sub	a, #0x02
      000012 26 04            [ 1]   76 	jrne	00272$
      000014 4C               [ 1]   77 	inc	a
      000015 6B 02            [ 1]   78 	ld	(0x02, sp), a
      000017 C5                      79 	.byte 0xc5
      000018                         80 00272$:
      000018 0F 02            [ 1]   81 	clr	(0x02, sp)
      00001A                         82 00273$:
      00001A 0D 03            [ 1]   83 	tnz	(0x03, sp)
      00001C 27 1A            [ 1]   84 	jreq	00113$
      00001E 0D 01            [ 1]   85 	tnz	(0x01, sp)
      000020 26 16            [ 1]   86 	jrne	00113$
      000022 0D 02            [ 1]   87 	tnz	(0x02, sp)
      000024 26 12            [ 1]   88 	jrne	00113$
      000026 7B 03            [ 1]   89 	ld	a, (0x03, sp)
      000028 A1 03            [ 1]   90 	cp	a, #0x03
      00002A 27 0C            [ 1]   91 	jreq	00113$
      00002C 4B 3D            [ 1]   92 	push	#0x3d
      00002E 5F               [ 1]   93 	clrw	x
      00002F 89               [ 2]   94 	pushw	x
      000030 4B 00            [ 1]   95 	push	#0x00
      000032 AEr00r00         [ 2]   96 	ldw	x, #(___str_0+0)
      000035 CDr00r00         [ 4]   97 	call	_assert_failed
      000038                         98 00113$:
                                     99 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 62: assert_param(IS_TIM1_IC_POLARITY_OK(TIM1_ICPolarity));
      000038 0D 06            [ 1]  100 	tnz	(0x06, sp)
      00003A 27 10            [ 1]  101 	jreq	00124$
      00003C 0D 06            [ 1]  102 	tnz	(0x06, sp)
      00003E 26 0C            [ 1]  103 	jrne	00124$
      000040 4B 3E            [ 1]  104 	push	#0x3e
      000042 5F               [ 1]  105 	clrw	x
      000043 89               [ 2]  106 	pushw	x
      000044 4B 00            [ 1]  107 	push	#0x00
      000046 AEr00r00         [ 2]  108 	ldw	x, #(___str_0+0)
      000049 CDr00r00         [ 4]  109 	call	_assert_failed
      00004C                        110 00124$:
                                    111 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 63: assert_param(IS_TIM1_IC_SELECTION_OK(TIM1_ICSelection));
      00004C 7B 07            [ 1]  112 	ld	a, (0x07, sp)
      00004E 4A               [ 1]  113 	dec	a
      00004F 27 18            [ 1]  114 	jreq	00129$
      000051 7B 07            [ 1]  115 	ld	a, (0x07, sp)
      000053 A1 02            [ 1]  116 	cp	a, #0x02
      000055 27 12            [ 1]  117 	jreq	00129$
      000057 7B 07            [ 1]  118 	ld	a, (0x07, sp)
      000059 A1 03            [ 1]  119 	cp	a, #0x03
      00005B 27 0C            [ 1]  120 	jreq	00129$
      00005D 4B 3F            [ 1]  121 	push	#0x3f
      00005F 5F               [ 1]  122 	clrw	x
      000060 89               [ 2]  123 	pushw	x
      000061 4B 00            [ 1]  124 	push	#0x00
      000063 AEr00r00         [ 2]  125 	ldw	x, #(___str_0+0)
      000066 CDr00r00         [ 4]  126 	call	_assert_failed
      000069                        127 00129$:
                                    128 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 64: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_ICPrescaler));
      000069 0D 08            [ 1]  129 	tnz	(0x08, sp)
      00006B 27 1E            [ 1]  130 	jreq	00137$
      00006D 7B 08            [ 1]  131 	ld	a, (0x08, sp)
      00006F A1 04            [ 1]  132 	cp	a, #0x04
      000071 27 18            [ 1]  133 	jreq	00137$
      000073 7B 08            [ 1]  134 	ld	a, (0x08, sp)
      000075 A1 08            [ 1]  135 	cp	a, #0x08
      000077 27 12            [ 1]  136 	jreq	00137$
      000079 7B 08            [ 1]  137 	ld	a, (0x08, sp)
      00007B A1 0C            [ 1]  138 	cp	a, #0x0c
      00007D 27 0C            [ 1]  139 	jreq	00137$
      00007F 4B 40            [ 1]  140 	push	#0x40
      000081 5F               [ 1]  141 	clrw	x
      000082 89               [ 2]  142 	pushw	x
      000083 4B 00            [ 1]  143 	push	#0x00
      000085 AEr00r00         [ 2]  144 	ldw	x, #(___str_0+0)
      000088 CDr00r00         [ 4]  145 	call	_assert_failed
      00008B                        146 00137$:
                                    147 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 65: assert_param(IS_TIM1_IC_FILTER_OK(TIM1_ICFilter));
      00008B 7B 09            [ 1]  148 	ld	a, (0x09, sp)
      00008D A1 0F            [ 1]  149 	cp	a, #0x0f
      00008F 23 0C            [ 2]  150 	jrule	00148$
      000091 4B 41            [ 1]  151 	push	#0x41
      000093 5F               [ 1]  152 	clrw	x
      000094 89               [ 2]  153 	pushw	x
      000095 4B 00            [ 1]  154 	push	#0x00
      000097 AEr00r00         [ 2]  155 	ldw	x, #(___str_0+0)
      00009A CDr00r00         [ 4]  156 	call	_assert_failed
      00009D                        157 00148$:
                                    158 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 70: TIM1_TI1_Config((uint8_t)TIM1_ICPolarity,
      00009D 7B 06            [ 1]  159 	ld	a, (0x06, sp)
      00009F 97               [ 1]  160 	ld	xl, a
                                    161 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 67: if (TIM1_Channel == TIM1_CHANNEL_1)
      0000A0 0D 03            [ 1]  162 	tnz	(0x03, sp)
      0000A2 26 11            [ 1]  163 	jrne	00108$
                                    164 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 70: TIM1_TI1_Config((uint8_t)TIM1_ICPolarity,
      0000A4 7B 09            [ 1]  165 	ld	a, (0x09, sp)
      0000A6 88               [ 1]  166 	push	a
      0000A7 7B 08            [ 1]  167 	ld	a, (0x08, sp)
      0000A9 88               [ 1]  168 	push	a
      0000AA 9F               [ 1]  169 	ld	a, xl
      0000AB CDr00r00         [ 4]  170 	call	_TIM1_TI1_Config
                                    171 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 74: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      0000AE 7B 08            [ 1]  172 	ld	a, (0x08, sp)
      0000B0 CDr00r00         [ 4]  173 	call	_TIM1_SetIC1Prescaler
      0000B3 20 39            [ 2]  174 	jra	00110$
      0000B5                        175 00108$:
                                    176 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 76: else if (TIM1_Channel == TIM1_CHANNEL_2)
      0000B5 7B 01            [ 1]  177 	ld	a, (0x01, sp)
      0000B7 27 11            [ 1]  178 	jreq	00105$
                                    179 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 79: TIM1_TI2_Config((uint8_t)TIM1_ICPolarity,
      0000B9 7B 09            [ 1]  180 	ld	a, (0x09, sp)
      0000BB 88               [ 1]  181 	push	a
      0000BC 7B 08            [ 1]  182 	ld	a, (0x08, sp)
      0000BE 88               [ 1]  183 	push	a
      0000BF 9F               [ 1]  184 	ld	a, xl
      0000C0 CDr00r00         [ 4]  185 	call	_TIM1_TI2_Config
                                    186 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 83: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      0000C3 7B 08            [ 1]  187 	ld	a, (0x08, sp)
      0000C5 CDr00r00         [ 4]  188 	call	_TIM1_SetIC2Prescaler
      0000C8 20 24            [ 2]  189 	jra	00110$
      0000CA                        190 00105$:
                                    191 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 85: else if (TIM1_Channel == TIM1_CHANNEL_3)
      0000CA 7B 02            [ 1]  192 	ld	a, (0x02, sp)
      0000CC 27 11            [ 1]  193 	jreq	00102$
                                    194 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 88: TIM1_TI3_Config((uint8_t)TIM1_ICPolarity,
      0000CE 7B 09            [ 1]  195 	ld	a, (0x09, sp)
      0000D0 88               [ 1]  196 	push	a
      0000D1 7B 08            [ 1]  197 	ld	a, (0x08, sp)
      0000D3 88               [ 1]  198 	push	a
      0000D4 9F               [ 1]  199 	ld	a, xl
      0000D5 CDr00r00         [ 4]  200 	call	_TIM1_TI3_Config
                                    201 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 92: TIM1_SetIC3Prescaler(TIM1_ICPrescaler);
      0000D8 7B 08            [ 1]  202 	ld	a, (0x08, sp)
      0000DA CDr00r00         [ 4]  203 	call	_TIM1_SetIC3Prescaler
      0000DD 20 0F            [ 2]  204 	jra	00110$
      0000DF                        205 00102$:
                                    206 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 97: TIM1_TI4_Config((uint8_t)TIM1_ICPolarity,
      0000DF 7B 09            [ 1]  207 	ld	a, (0x09, sp)
      0000E1 88               [ 1]  208 	push	a
      0000E2 7B 08            [ 1]  209 	ld	a, (0x08, sp)
      0000E4 88               [ 1]  210 	push	a
      0000E5 9F               [ 1]  211 	ld	a, xl
      0000E6 CDr00r00         [ 4]  212 	call	_TIM1_TI4_Config
                                    213 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 101: TIM1_SetIC4Prescaler(TIM1_ICPrescaler);
      0000E9 7B 08            [ 1]  214 	ld	a, (0x08, sp)
      0000EB CDr00r00         [ 4]  215 	call	_TIM1_SetIC4Prescaler
      0000EE                        216 00110$:
                                    217 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c: 103: }
      0000EE 1E 04            [ 2]  218 	ldw	x, (4, sp)
      0000F0 5B 09            [ 2]  219 	addw	sp, #9
      0000F2 FC               [ 2]  220 	jp	(x)
                                    221 	.area CODE
                                    222 	.area CONST
                                    223 	.area CONST
      000000                        224 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   225 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_tim1_ICInit.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 74 69 6D 31 5F 49
             43 49 6E 69 74 2E 63
      000031 00                     226 	.db 0x00
                                    227 	.area CODE
                                    228 	.area INITIALIZER
                                    229 	.area CABS (ABS)
