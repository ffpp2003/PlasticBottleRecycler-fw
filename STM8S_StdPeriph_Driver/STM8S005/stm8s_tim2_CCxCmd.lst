                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim2_CCxCmd
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _TIM2_CCxCmd
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 53: void TIM2_CCxCmd(TIM2_Channel_TypeDef TIM2_Channel, FunctionalState NewState)
                                     51 ;	-----------------------------------------
                                     52 ;	 function TIM2_CCxCmd
                                     53 ;	-----------------------------------------
      000000                         54 _TIM2_CCxCmd:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 56: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      000001 A1 01            [ 1]   57 	cp	a, #0x01
      000003 26 07            [ 1]   58 	jrne	00202$
      000005 88               [ 1]   59 	push	a
      000006 A6 01            [ 1]   60 	ld	a, #0x01
      000008 6B 02            [ 1]   61 	ld	(0x02, sp), a
      00000A 84               [ 1]   62 	pop	a
      00000B C5                      63 	.byte 0xc5
      00000C                         64 00202$:
      00000C 0F 01            [ 1]   65 	clr	(0x01, sp)
      00000E                         66 00203$:
      00000E 4D               [ 1]   67 	tnz	a
      00000F 27 16            [ 1]   68 	jreq	00119$
      000011 0D 01            [ 1]   69 	tnz	(0x01, sp)
      000013 26 12            [ 1]   70 	jrne	00119$
      000015 A1 02            [ 1]   71 	cp	a, #0x02
      000017 27 0E            [ 1]   72 	jreq	00119$
      000019 88               [ 1]   73 	push	a
      00001A 4B 38            [ 1]   74 	push	#0x38
      00001C 5F               [ 1]   75 	clrw	x
      00001D 89               [ 2]   76 	pushw	x
      00001E 4B 00            [ 1]   77 	push	#0x00
      000020 AEr00r00         [ 2]   78 	ldw	x, #(___str_0+0)
      000023 CDr00r00         [ 4]   79 	call	_assert_failed
      000026 84               [ 1]   80 	pop	a
      000027                         81 00119$:
                                     82 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 57: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000027 0D 04            [ 1]   83 	tnz	(0x04, sp)
      000029 27 12            [ 1]   84 	jreq	00127$
      00002B 0D 04            [ 1]   85 	tnz	(0x04, sp)
      00002D 26 0E            [ 1]   86 	jrne	00127$
      00002F 88               [ 1]   87 	push	a
      000030 4B 39            [ 1]   88 	push	#0x39
      000032 5F               [ 1]   89 	clrw	x
      000033 89               [ 2]   90 	pushw	x
      000034 4B 00            [ 1]   91 	push	#0x00
      000036 AEr00r00         [ 2]   92 	ldw	x, #(___str_0+0)
      000039 CDr00r00         [ 4]   93 	call	_assert_failed
      00003C 84               [ 1]   94 	pop	a
      00003D                         95 00127$:
                                     96 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 59: if (TIM2_Channel == TIM2_CHANNEL_1)
      00003D 4D               [ 1]   97 	tnz	a
      00003E 26 15            [ 1]   98 	jrne	00114$
                                     99 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 64: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      000040 C6 53 08         [ 1]  100 	ld	a, 0x5308
                                    101 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 62: if (NewState != DISABLE)
      000043 0D 04            [ 1]  102 	tnz	(0x04, sp)
      000045 27 07            [ 1]  103 	jreq	00102$
                                    104 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 64: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      000047 AA 01            [ 1]  105 	or	a, #0x01
      000049 C7 53 08         [ 1]  106 	ld	0x5308, a
      00004C 20 33            [ 2]  107 	jra	00116$
      00004E                        108 00102$:
                                    109 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 68: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      00004E A4 FE            [ 1]  110 	and	a, #0xfe
      000050 C7 53 08         [ 1]  111 	ld	0x5308, a
      000053 20 2C            [ 2]  112 	jra	00116$
      000055                        113 00114$:
                                    114 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 72: else if (TIM2_Channel == TIM2_CHANNEL_2)
      000055 7B 01            [ 1]  115 	ld	a, (0x01, sp)
      000057 27 15            [ 1]  116 	jreq	00111$
                                    117 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 64: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      000059 C6 53 08         [ 1]  118 	ld	a, 0x5308
                                    119 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 75: if (NewState != DISABLE)
      00005C 0D 04            [ 1]  120 	tnz	(0x04, sp)
      00005E 27 07            [ 1]  121 	jreq	00105$
                                    122 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 77: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC2E;
      000060 AA 10            [ 1]  123 	or	a, #0x10
      000062 C7 53 08         [ 1]  124 	ld	0x5308, a
      000065 20 1A            [ 2]  125 	jra	00116$
      000067                        126 00105$:
                                    127 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 81: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      000067 A4 EF            [ 1]  128 	and	a, #0xef
      000069 C7 53 08         [ 1]  129 	ld	0x5308, a
      00006C 20 13            [ 2]  130 	jra	00116$
      00006E                        131 00111$:
                                    132 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 89: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3E;
      00006E C6 53 09         [ 1]  133 	ld	a, 0x5309
                                    134 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 87: if (NewState != DISABLE)
      000071 0D 04            [ 1]  135 	tnz	(0x04, sp)
      000073 27 07            [ 1]  136 	jreq	00108$
                                    137 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 89: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3E;
      000075 AA 01            [ 1]  138 	or	a, #0x01
      000077 C7 53 09         [ 1]  139 	ld	0x5309, a
      00007A 20 05            [ 2]  140 	jra	00116$
      00007C                        141 00108$:
                                    142 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 93: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3E);
      00007C A4 FE            [ 1]  143 	and	a, #0xfe
      00007E C7 53 09         [ 1]  144 	ld	0x5309, a
      000081                        145 00116$:
                                    146 ;	../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c: 96: }
      000081 84               [ 1]  147 	pop	a
      000082 85               [ 2]  148 	popw	x
      000083 84               [ 1]  149 	pop	a
      000084 FC               [ 2]  150 	jp	(x)
                                    151 	.area CODE
                                    152 	.area CONST
                                    153 	.area CONST
      000000                        154 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   155 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_tim2_CCxCmd.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 74 69 6D 32 5F 43
             43 78 43 6D 64 2E 63
      000031 00                     156 	.db 0x00
                                    157 	.area CODE
                                    158 	.area INITIALIZER
                                    159 	.area CABS (ABS)
