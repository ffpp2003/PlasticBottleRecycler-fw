                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_uart2_ClearITPendingBit
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _UART2_ClearITPendingBit
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 67: void UART2_ClearITPendingBit(UART2_IT_TypeDef UART2_IT)
                                     51 ;	-----------------------------------------
                                     52 ;	 function UART2_ClearITPendingBit
                                     53 ;	-----------------------------------------
      000000                         54 _UART2_ClearITPendingBit:
      000000 88               [ 1]   55 	push	a
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 69: assert_param(IS_UART2_CLEAR_IT_OK(UART2_IT));
      000001 A3 02 55         [ 2]   57 	cpw	x, #0x0255
      000004 26 03            [ 1]   58 	jrne	00153$
      000006 A6 01            [ 1]   59 	ld	a, #0x01
      000008 21                      60 	.byte 0x21
      000009                         61 00153$:
      000009 4F               [ 1]   62 	clr	a
      00000A                         63 00154$:
      00000A A3 03 46         [ 2]   64 	cpw	x, #0x0346
      00000D 26 07            [ 1]   65 	jrne	00156$
      00000F 88               [ 1]   66 	push	a
      000010 A6 01            [ 1]   67 	ld	a, #0x01
      000012 6B 02            [ 1]   68 	ld	(0x02, sp), a
      000014 84               [ 1]   69 	pop	a
      000015 C5                      70 	.byte 0xc5
      000016                         71 00156$:
      000016 0F 01            [ 1]   72 	clr	(0x01, sp)
      000018                         73 00157$:
      000018 4D               [ 1]   74 	tnz	a
      000019 26 17            [ 1]   75 	jrne	00110$
      00001B A3 04 12         [ 2]   76 	cpw	x, #0x0412
      00001E 27 12            [ 1]   77 	jreq	00110$
      000020 0D 01            [ 1]   78 	tnz	(0x01, sp)
      000022 26 0E            [ 1]   79 	jrne	00110$
      000024 88               [ 1]   80 	push	a
      000025 4B 45            [ 1]   81 	push	#0x45
      000027 5F               [ 1]   82 	clrw	x
      000028 89               [ 2]   83 	pushw	x
      000029 4B 00            [ 1]   84 	push	#0x00
      00002B AEr00r00         [ 2]   85 	ldw	x, #(___str_0+0)
      00002E CDr00r00         [ 4]   86 	call	_assert_failed
      000031 84               [ 1]   87 	pop	a
      000032                         88 00110$:
                                     89 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 72: if (UART2_IT == UART2_IT_RXNE)
      000032 4D               [ 1]   90 	tnz	a
      000033 27 06            [ 1]   91 	jreq	00105$
                                     92 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 74: UART2->SR = (uint8_t)~(UART2_SR_RXNE);
      000035 35 DF 52 40      [ 1]   93 	mov	0x5240+0, #0xdf
      000039 20 0E            [ 2]   94 	jra	00107$
      00003B                         95 00105$:
                                     96 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 77: else if (UART2_IT == UART2_IT_LBDF)
      00003B 7B 01            [ 1]   97 	ld	a, (0x01, sp)
      00003D 27 06            [ 1]   98 	jreq	00102$
                                     99 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 79: UART2->CR4 &= (uint8_t)~(UART2_CR4_LBDF);
      00003F 72 19 52 47      [ 1]  100 	bres	0x5247, #4
      000043 20 04            [ 2]  101 	jra	00107$
      000045                        102 00102$:
                                    103 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 84: UART2->CR6 &= (uint8_t)(~UART2_CR6_LHDF);
      000045 72 13 52 49      [ 1]  104 	bres	0x5249, #1
      000049                        105 00107$:
                                    106 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit.c: 86: }
      000049 84               [ 1]  107 	pop	a
      00004A 81               [ 4]  108 	ret
                                    109 	.area CODE
                                    110 	.area CONST
                                    111 	.area CONST
      000000                        112 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   113 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_uart2_ClearITPendingBit."
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 75 61 72 74 32 5F
             43 6C 65 61 72 49 54
             50 65 6E 64 69 6E 67
             42 69 74 2E
      00003C 63                     114 	.ascii "c"
      00003D 00                     115 	.db 0x00
                                    116 	.area CODE
                                    117 	.area INITIALIZER
                                    118 	.area CABS (ABS)
