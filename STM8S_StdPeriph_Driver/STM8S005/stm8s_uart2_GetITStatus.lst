                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_uart2_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _UART2_GetITStatus
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 
                                     26 ; default segment ordering for linker
                                     27 	.area HOME
                                     28 	.area GSINIT
                                     29 	.area GSFINAL
                                     30 	.area CONST
                                     31 	.area INITIALIZER
                                     32 	.area CODE
                                     33 
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 54: ITStatus UART2_GetITStatus(UART2_IT_TypeDef UART2_IT)
                                     51 ;	-----------------------------------------
                                     52 ;	 function UART2_GetITStatus
                                     53 ;	-----------------------------------------
      000000                         54 _UART2_GetITStatus:
      000000 52 05            [ 2]   55 	sub	sp, #5
                                     56 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 63: assert_param(IS_UART2_GET_IT_OK(UART2_IT));
      000002 90 93            [ 1]   57 	ldw	y, x
      000004 A3 03 46         [ 2]   58 	cpw	x, #0x0346
      000007 26 05            [ 1]   59 	jrne	00285$
      000009 A6 01            [ 1]   60 	ld	a, #0x01
      00000B 6B 01            [ 1]   61 	ld	(0x01, sp), a
      00000D C5                      62 	.byte 0xc5
      00000E                         63 00285$:
      00000E 0F 01            [ 1]   64 	clr	(0x01, sp)
      000010                         65 00286$:
      000010 A3 04 12         [ 2]   66 	cpw	x, #0x0412
      000013 26 05            [ 1]   67 	jrne	00288$
      000015 A6 01            [ 1]   68 	ld	a, #0x01
      000017 6B 02            [ 1]   69 	ld	(0x02, sp), a
      000019 C5                      70 	.byte 0xc5
      00001A                         71 00288$:
      00001A 0F 02            [ 1]   72 	clr	(0x02, sp)
      00001C                         73 00289$:
      00001C A3 01 00         [ 2]   74 	cpw	x, #0x0100
      00001F 26 05            [ 1]   75 	jrne	00291$
      000021 A6 01            [ 1]   76 	ld	a, #0x01
      000023 6B 03            [ 1]   77 	ld	(0x03, sp), a
      000025 C5                      78 	.byte 0xc5
      000026                         79 00291$:
      000026 0F 03            [ 1]   80 	clr	(0x03, sp)
      000028                         81 00292$:
      000028 A3 02 77         [ 2]   82 	cpw	x, #0x0277
      00002B 27 30            [ 1]   83 	jreq	00129$
      00002D A3 02 66         [ 2]   84 	cpw	x, #0x0266
      000030 27 2B            [ 1]   85 	jreq	00129$
      000032 A3 02 55         [ 2]   86 	cpw	x, #0x0255
      000035 27 26            [ 1]   87 	jreq	00129$
      000037 A3 02 44         [ 2]   88 	cpw	x, #0x0244
      00003A 27 21            [ 1]   89 	jreq	00129$
      00003C A3 02 35         [ 2]   90 	cpw	x, #0x0235
      00003F 27 1C            [ 1]   91 	jreq	00129$
      000041 0D 01            [ 1]   92 	tnz	(0x01, sp)
      000043 26 18            [ 1]   93 	jrne	00129$
      000045 0D 02            [ 1]   94 	tnz	(0x02, sp)
      000047 26 14            [ 1]   95 	jrne	00129$
      000049 0D 03            [ 1]   96 	tnz	(0x03, sp)
      00004B 26 10            [ 1]   97 	jrne	00129$
      00004D 90 89            [ 2]   98 	pushw	y
      00004F 4B 3F            [ 1]   99 	push	#0x3f
      000051 5F               [ 1]  100 	clrw	x
      000052 89               [ 2]  101 	pushw	x
      000053 4B 00            [ 1]  102 	push	#0x00
      000055 AEr00r00         [ 2]  103 	ldw	x, #(___str_0+0)
      000058 CDr00r00         [ 4]  104 	call	_assert_failed
      00005B 90 85            [ 2]  105 	popw	y
      00005D                        106 00129$:
                                    107 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 66: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)UART2_IT & (uint8_t)0x0F));
      00005D 93               [ 1]  108 	ldw	x, y
      00005E 9F               [ 1]  109 	ld	a, xl
      00005F A4 0F            [ 1]  110 	and	a, #0x0f
      000061 88               [ 1]  111 	push	a
      000062 A6 01            [ 1]  112 	ld	a, #0x01
      000064 6B 05            [ 1]  113 	ld	(0x05, sp), a
      000066 84               [ 1]  114 	pop	a
      000067 4D               [ 1]  115 	tnz	a
      000068 27 05            [ 1]  116 	jreq	00312$
      00006A                        117 00311$:
      00006A 08 04            [ 1]  118 	sll	(0x04, sp)
      00006C 4A               [ 1]  119 	dec	a
      00006D 26 FB            [ 1]  120 	jrne	00311$
      00006F                        121 00312$:
                                    122 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 68: itmask1 = (uint8_t)((uint8_t)UART2_IT >> (uint8_t)4);
      00006F 9F               [ 1]  123 	ld	a, xl
      000070 4E               [ 1]  124 	swap	a
      000071 A4 0F            [ 1]  125 	and	a, #0x0f
                                    126 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 70: itmask2 = (uint8_t)((uint8_t)1 << itmask1);
      000073 88               [ 1]  127 	push	a
      000074 A6 01            [ 1]  128 	ld	a, #0x01
      000076 6B 06            [ 1]  129 	ld	(0x06, sp), a
      000078 84               [ 1]  130 	pop	a
      000079 4D               [ 1]  131 	tnz	a
      00007A 27 05            [ 1]  132 	jreq	00314$
      00007C                        133 00313$:
      00007C 08 05            [ 1]  134 	sll	(0x05, sp)
      00007E 4A               [ 1]  135 	dec	a
      00007F 26 FB            [ 1]  136 	jrne	00313$
      000081                        137 00314$:
                                    138 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 73: if (UART2_IT == UART2_IT_PE)
      000081 7B 03            [ 1]  139 	ld	a, (0x03, sp)
      000083 27 18            [ 1]  140 	jreq	00124$
                                    141 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 76: enablestatus = (uint8_t)((uint8_t)UART2->CR1 & itmask2);
      000085 C6 52 44         [ 1]  142 	ld	a, 0x5244
      000088 14 05            [ 1]  143 	and	a, (0x05, sp)
      00008A 97               [ 1]  144 	ld	xl, a
                                    145 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 79: if (((UART2->SR & itpos) != (uint8_t)0x00) && enablestatus)
      00008B C6 52 40         [ 1]  146 	ld	a, 0x5240
      00008E 14 04            [ 1]  147 	and	a, (0x04, sp)
      000090 27 08            [ 1]  148 	jreq	00102$
      000092 9F               [ 1]  149 	ld	a, xl
      000093 4D               [ 1]  150 	tnz	a
      000094 27 04            [ 1]  151 	jreq	00102$
                                    152 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 82: pendingbitstatus = SET;
      000096 A6 01            [ 1]  153 	ld	a, #0x01
      000098 20 50            [ 2]  154 	jra	00125$
      00009A                        155 00102$:
                                    156 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 87: pendingbitstatus = RESET;
      00009A 4F               [ 1]  157 	clr	a
      00009B 20 4D            [ 2]  158 	jra	00125$
      00009D                        159 00124$:
                                    160 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 90: else if (UART2_IT == UART2_IT_LBDF)
      00009D 7B 01            [ 1]  161 	ld	a, (0x01, sp)
      00009F 27 18            [ 1]  162 	jreq	00121$
                                    163 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 93: enablestatus = (uint8_t)((uint8_t)UART2->CR4 & itmask2);
      0000A1 C6 52 47         [ 1]  164 	ld	a, 0x5247
      0000A4 14 05            [ 1]  165 	and	a, (0x05, sp)
      0000A6 97               [ 1]  166 	ld	xl, a
                                    167 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 95: if (((UART2->CR4 & itpos) != (uint8_t)0x00) && enablestatus)
      0000A7 C6 52 47         [ 1]  168 	ld	a, 0x5247
      0000AA 14 04            [ 1]  169 	and	a, (0x04, sp)
      0000AC 27 08            [ 1]  170 	jreq	00106$
      0000AE 9F               [ 1]  171 	ld	a, xl
      0000AF 4D               [ 1]  172 	tnz	a
      0000B0 27 04            [ 1]  173 	jreq	00106$
                                    174 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 98: pendingbitstatus = SET;
      0000B2 A6 01            [ 1]  175 	ld	a, #0x01
      0000B4 20 34            [ 2]  176 	jra	00125$
      0000B6                        177 00106$:
                                    178 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 103: pendingbitstatus = RESET;
      0000B6 4F               [ 1]  179 	clr	a
      0000B7 20 31            [ 2]  180 	jra	00125$
      0000B9                        181 00121$:
                                    182 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 106: else if (UART2_IT == UART2_IT_LHDF)
      0000B9 7B 02            [ 1]  183 	ld	a, (0x02, sp)
      0000BB 27 18            [ 1]  184 	jreq	00118$
                                    185 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 109: enablestatus = (uint8_t)((uint8_t)UART2->CR6 & itmask2);
      0000BD C6 52 49         [ 1]  186 	ld	a, 0x5249
      0000C0 14 05            [ 1]  187 	and	a, (0x05, sp)
      0000C2 97               [ 1]  188 	ld	xl, a
                                    189 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 111: if (((UART2->CR6 & itpos) != (uint8_t)0x00) && enablestatus)
      0000C3 C6 52 49         [ 1]  190 	ld	a, 0x5249
      0000C6 14 04            [ 1]  191 	and	a, (0x04, sp)
      0000C8 27 08            [ 1]  192 	jreq	00110$
      0000CA 9F               [ 1]  193 	ld	a, xl
      0000CB 4D               [ 1]  194 	tnz	a
      0000CC 27 04            [ 1]  195 	jreq	00110$
                                    196 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 114: pendingbitstatus = SET;
      0000CE A6 01            [ 1]  197 	ld	a, #0x01
      0000D0 20 18            [ 2]  198 	jra	00125$
      0000D2                        199 00110$:
                                    200 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 119: pendingbitstatus = RESET;
      0000D2 4F               [ 1]  201 	clr	a
      0000D3 20 15            [ 2]  202 	jra	00125$
      0000D5                        203 00118$:
                                    204 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 125: enablestatus = (uint8_t)((uint8_t)UART2->CR2 & itmask2);
      0000D5 C6 52 45         [ 1]  205 	ld	a, 0x5245
      0000D8 14 05            [ 1]  206 	and	a, (0x05, sp)
      0000DA 97               [ 1]  207 	ld	xl, a
                                    208 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 127: if (((UART2->SR & itpos) != (uint8_t)0x00) && enablestatus)
      0000DB C6 52 40         [ 1]  209 	ld	a, 0x5240
      0000DE 14 04            [ 1]  210 	and	a, (0x04, sp)
      0000E0 27 07            [ 1]  211 	jreq	00114$
      0000E2 9F               [ 1]  212 	ld	a, xl
      0000E3 4D               [ 1]  213 	tnz	a
      0000E4 27 03            [ 1]  214 	jreq	00114$
                                    215 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 130: pendingbitstatus = SET;
      0000E6 A6 01            [ 1]  216 	ld	a, #0x01
                                    217 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 135: pendingbitstatus = RESET;
      0000E8 21                     218 	.byte 0x21
      0000E9                        219 00114$:
      0000E9 4F               [ 1]  220 	clr	a
      0000EA                        221 00125$:
                                    222 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 139: return  pendingbitstatus;
                                    223 ;	../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c: 140: }
      0000EA 5B 05            [ 2]  224 	addw	sp, #5
      0000EC 81               [ 4]  225 	ret
                                    226 	.area CODE
                                    227 	.area CONST
                                    228 	.area CONST
      000000                        229 ___str_0:
      000000 2E 2E 2F 53 54 4D 38   230 	.ascii "../STM8S_StdPeriph_Driver/src/stm8s_uart2_GetITStatus.c"
             53 5F 53 74 64 50 65
             72 69 70 68 5F 44 72
             69 76 65 72 2F 73 72
             63 2F 73 74 6D 38 73
             5F 75 61 72 74 32 5F
             47 65 74 49 54 53 74
             61 74 75 73 2E 63
      000037 00                     231 	.db 0x00
                                    232 	.area CODE
                                    233 	.area INITIALIZER
                                    234 	.area CABS (ABS)
